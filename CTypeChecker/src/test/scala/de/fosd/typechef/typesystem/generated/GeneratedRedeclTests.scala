package de.fosd.typechef.typesystem.generated

import de.fosd.typechef.typesystem._
import org.junit._

/** generated tests! do not modify! */
class GeneratedRedeclTests extends TestHelperTS {

    @Test def test_conf0_0_0_0_0_0_0_0_0() {
        correct("""
                int foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_0_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_0_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: redefinition of 'foo'
                 int foo(int a) {};
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                int foo(int a) {};
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_0_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_0_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                int foo;
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_0_0_0_0_0_0() {
        correct("""
                int foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                volatile int foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(int a) {};
                      ^

        */
        error("""
                long foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(int a) {};
                        ^

        */
        error("""
                double foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_3_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(int a) {};
                      ^

        */
        error("""
                int* foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_4_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_5_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(int a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_6_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(int a) {};
                           ^

        */
        error("""
                const int foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_8_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int a) {};
                 ^

        */
        correct("""
                volatile int foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_10_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(int a) {};
                      ^

        */
        error("""
                void foo(int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_1_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_4_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_7_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_0_0_0_0() {
        correct("""
                int foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_0_0_0_0() {
        correct("""
                int foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^

        */
        error("""
                int foo(long a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(double a) {};
                     ^

        */
        error("""
                int foo(double a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int* a) {};
                     ^

        */
        error("""
                int foo(int* a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a) {};
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(struct { int a; } a) {};
                     ^

        */
        error("""
                int foo(struct { int a; } a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct S a) {};
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct T a) {};
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_7_0_0_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(const int a) {};
                 ^

        */
        correct("""
                int foo(const int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_8_0_0_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(volatile int a) {};
                 ^

        */
        correct("""
                int foo(volatile int a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct_anonymous a) {};
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a) {};
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_4_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_5_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_6_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_9_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                int foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a) {};
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a) {};
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a) {};
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a) {};
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo;
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(int a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_7_0_0_0() {
        correct("""
                int foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_8_0_0_0() {
        correct("""
                int foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a) {};
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a) {};
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_7_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a) {};
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_8_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a) {};
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a) {};
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo;
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(const int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(volatile int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_0_0_1_0() {
        correct("""
                int foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_0_0_1_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a) {};
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_0_0_0_1() {
        correct("""
                int foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_0_0_0_0_1() {
        /* gcc reports:
test.c: In function 'foo':
test.c:1:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a) {};
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_0_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_1_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                long foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                double foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_3_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                int* foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_4_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_5_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                const int foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_8_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a) {};
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                volatile int foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_9_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_10_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                void foo(int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_1_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_2_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_3_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_5_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_7_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_8_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_0_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_0_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                int foo(long a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                int foo(double a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                int foo(int* a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_7_0_0_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(const int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_8_0_0_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(volatile int a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a) {};
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a) {};
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int a) {};
                 ^

        */
        error("""
                int foo(int a);
                long foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a) {};
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int a) {};
                 ^

        */
        error("""
                int foo(int a);
                double foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a) {};
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(int a) {};
                 ^

        */
        error("""
                int foo(int a);
                int* foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a) {};
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(int a) {};
                        ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a) {};
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a) {};
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int a) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a) {};
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int a) {};
                 ^

        */
        error("""
                int foo(int a);
                const int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a) {};
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a);
                volatile int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a) {};
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a) {};
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(long a) {};
                 ^

        */
        error("""
                int foo(int a);
                int foo(long a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(double a) {};
                 ^

        */
        error("""
                int foo(int a);
                int foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int* a) {};
                 ^

        */
        error("""
                int foo(int a);
                int foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a) {};
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct { int a; } a) {};
                                ^

        */
        error("""
                int foo(int a);
                int foo(struct { int a; } a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a) {};
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct S a) {};
                                ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                int foo(struct S a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a) {};
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct T a) {};
                                ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                int foo(struct T a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_7_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(const int a) {};
                 ^

        */
        correct("""
                int foo(int a);
                int foo(const int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_8_0_0_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(volatile int a) {};
                 ^

        */
        correct("""
                int foo(int a);
                int foo(volatile int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a) {};
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct_anonymous a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                int foo(struct_anonymous a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_5_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_6_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_9_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a, int c) {};
                 ^

        */
        error("""
                int foo(int a);
                int foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_0_0_1_0() {
        /* gcc reports:
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int b) {};
                 ^

        */
        correct("""
                int foo(int a);
                int foo(int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_0_0_0_0_1() {
        /* gcc reports:
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int a) {};
                 ^

        */
        correct("""
                int foo(int a);
                int foo(int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo;
                     ^

        */
        error("""
                int foo(int a);
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_1_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(long a);
                      ^

        */
        error("""
                long foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(double a);
                      ^

        */
        error("""
                long foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int* a);
                      ^

        */
        error("""
                long foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a);
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(struct { int a; } a);
                      ^

        */
        error("""
                long foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^

        */
        error("""
                long foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(volatile int a);
                      ^

        */
        error("""
                long foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(long a);
                        ^

        */
        error("""
                double foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(double a);
                        ^

        */
        error("""
                double foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int* a);
                        ^

        */
        error("""
                double foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a);
                                   ^
test.c:1:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(struct { int a; } a);
                        ^

        */
        error("""
                double foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct S a);
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct T a);
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(const int a);
                        ^

        */
        error("""
                double foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(volatile int a);
                        ^

        */
        error("""
                double foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct_anonymous a);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(long a);
                      ^

        */
        error("""
                int* foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(double a);
                      ^

        */
        error("""
                int* foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int* a);
                      ^

        */
        error("""
                int* foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a);
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(struct { int a; } a);
                      ^

        */
        error("""
                int* foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(const int a);
                      ^

        */
        error("""
                int* foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(volatile int a);
                      ^

        */
        error("""
                int* foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(long a);
                                   ^

        */
        error("""
                struct { int a; } foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(double a);
                                   ^

        */
        error("""
                struct { int a; } foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int* a);
                                   ^

        */
        error("""
                struct { int a; } foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a);
                                              ^
test.c:1:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct { int a; } a);
                                   ^

        */
        error("""
                struct { int a; } foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct S a);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct T a);
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(const int a);
                                   ^

        */
        error("""
                struct { int a; } foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(volatile int a);
                                   ^

        */
        error("""
                struct { int a; } foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct_anonymous a);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_1_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(long a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_2_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(double a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_3_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int* a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_4_0_0_0_0_0() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct S a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_6_0_0_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct T a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_7_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(const int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_8_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(volatile int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_9_0_0_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_1_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(long a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_2_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(double a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_3_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int* a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_4_0_0_0_0_0() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(struct { int a; } a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_5_0_0_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct S a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(struct T a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_7_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(const int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_8_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(volatile int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_9_0_0_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(long a);
                           ^

        */
        error("""
                const int foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(double a);
                           ^

        */
        error("""
                const int foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int* a);
                           ^

        */
        error("""
                const int foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a);
                                      ^
test.c:1:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(struct { int a; } a);
                           ^

        */
        error("""
                const int foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct S a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct T a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(const int a);
                           ^

        */
        error("""
                const int foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(volatile int a);
                           ^

        */
        error("""
                const int foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct_anonymous a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(long a);
                              ^

        */
        error("""
                volatile int foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(double a);
                              ^

        */
        error("""
                volatile int foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int* a);
                              ^

        */
        error("""
                volatile int foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a);
                                         ^
test.c:1:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct { int a; } a);
                              ^

        */
        error("""
                volatile int foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct S a);
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct T a);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                volatile int foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                volatile int foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct_anonymous a);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_1_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(long a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_2_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(double a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_3_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_4_0_0_0_0_0() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct { int a; } a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_5_0_0_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct S a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_6_0_0_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct T a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_7_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(const int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_8_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(volatile int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct_anonymous a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_1_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(long a);
                      ^

        */
        error("""
                void foo(long a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_2_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(double a);
                      ^

        */
        error("""
                void foo(double a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_3_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int* a);
                      ^

        */
        error("""
                void foo(int* a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_4_0_0_0_0_0() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a);
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(struct { int a; } a);
                      ^

        */
        error("""
                void foo(struct { int a; } a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_5_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(struct S a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_6_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(struct T a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_7_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(const int a);
                      ^

        */
        error("""
                void foo(const int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_8_0_0_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(volatile int a);
                      ^

        */
        error("""
                void foo(volatile int a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_9_0_0_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a);
                int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_1_0_0_0_0() {
        correct("""
                long foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_2_0_0_0_0() {
        correct("""
                double foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_3_0_0_0_0() {
        correct("""
                int* foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_2_0_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_3_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_4_0_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_5_0_0_0_0() {
        correct("""
              struct S { int x; int y; };

                struct S foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_6_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_7_0_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_8_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_9_0_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_10_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_2_0_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_3_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_4_0_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_5_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_6_0_0_0_0() {
        correct("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_7_0_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_8_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_9_0_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_10_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_7_0_0_0_0() {
        correct("""
                const int foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 long foo(int a);
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 double foo(int a);
                 ^
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int* foo(int a);
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:24: warning: function return types not compatible due to 'volatile'
                 struct { int a; } foo(int a);
                        ^
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:24: warning: function return types not compatible due to 'volatile'
                 struct S foo(int a);
                        ^
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:24: warning: function return types not compatible due to 'volatile'
                 struct T foo(int a);
                        ^
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 const int foo(int a);
                 ^
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_8_0_0_0_0() {
        correct("""
                volatile int foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 struct_anonymous foo(int a);
                 ^
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_10_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 void foo(int a);
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_2_0_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_3_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_4_0_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_5_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_6_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_7_0_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_8_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_9_0_0_0_0() {
        correct("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_10_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_10_0_0_0_0() {
        correct("""
                void foo(int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_1_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_2_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_3_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_4_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_6_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_7_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_9_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_1_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_2_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_3_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_4_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_5_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_7_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_9_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(long a);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(double a);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int* a);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:32: warning: function return types not compatible due to 'volatile'
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: function return types not compatible due to 'volatile'
                 int foo(struct S a);
                                ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: function return types not compatible due to 'volatile'
                 int foo(struct T a);
                                ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(const int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                volatile int foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(volatile int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                volatile int foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 int foo(struct_anonymous a);
                 ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_1_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_2_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_3_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_4_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_5_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_6_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_7_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_0_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_0_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a, int c);
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_0_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_0_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_0_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int b);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                volatile int foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_0_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_3_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_4_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_0_0_0_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_0_0_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                volatile int foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_0_0_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(long a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(long a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(long a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(double a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(double a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(double a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int* a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int* a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int* a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_1_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_2_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_3_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_4_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_5_0_0_0_0() {
        /* gcc reports:
test.c:3:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:3:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct { int a; } a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_6_0_0_0_0() {
        /* gcc reports:
test.c:3:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:3:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct { int a; } a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_7_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_8_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_9_0_0_0_0() {
        /* gcc reports:
test.c:3:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:3:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct { int a; } a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_10_0_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_2_0_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_3_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_4_0_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_6_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(struct S a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_7_0_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_8_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_9_0_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int foo(struct S a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_10_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_2_0_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_3_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_4_0_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_5_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(struct T a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_7_0_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_8_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_9_0_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(struct T a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_10_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(const int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(const int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                int foo(const int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(const int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_2_0_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_3_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_4_0_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_5_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(volatile int a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_6_0_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(volatile int a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_8_0_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                int foo(volatile int a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(volatile int a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_10_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_2_0_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                double foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_3_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int* foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_4_0_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_5_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int foo(struct_anonymous a);
                struct S foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_6_0_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(struct_anonymous a);
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_7_0_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                const int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_8_0_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int a);
                              ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                volatile int foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_9_0_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                struct_anonymous foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_10_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_1_0_0_0() {
        correct("""
                int foo(long a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(long a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(long a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(long a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_2_0_0_0() {
        correct("""
                int foo(double a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(double a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(double a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(double a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_3_0_0_0() {
        correct("""
                int foo(int* a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int* a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int* a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_7_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int* a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_1_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_2_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_3_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_4_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_5_0_0_0() {
        /* gcc reports:
test.c:3:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:3:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct { int a; } a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_6_0_0_0() {
        /* gcc reports:
test.c:3:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:3:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct { int a; } a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_7_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_8_0_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_9_0_0_0() {
        /* gcc reports:
test.c:3:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:3:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct { int a; } a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_1_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_2_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_3_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_4_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_5_0_0_0() {
        correct("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_6_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(struct S a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_7_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_9_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int foo(struct S a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_1_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_2_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_3_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_4_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_5_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(struct T a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_6_0_0_0() {
        correct("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_7_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_9_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(const int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(const int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_7_0_0_0() {
        correct("""
                int foo(const int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_8_0_0_0() {
        correct("""
                int foo(const int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(const int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_2_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_3_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(volatile int a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(volatile int a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_7_0_0_0() {
        correct("""
                int foo(volatile int a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_8_0_0_0() {
        correct("""
                int foo(volatile int a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_9_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(volatile int a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_1_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_2_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_3_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_4_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_5_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int foo(struct_anonymous a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_6_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(struct_anonymous a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_7_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(const int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_9_0_0_0() {
        correct("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_0_1_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_0_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_0_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_0_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_0_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_0_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_0_0_1_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_0_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_0_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_0_0_1_0() {
        correct("""
                int foo(const int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_0_0_1_0() {
        correct("""
                int foo(volatile int a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_0_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_1_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^

        */
        error("""
                int foo(long a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_4_0_0_0_0_1() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_0_0_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_0_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_0_0_0_0_1() {
        correct("""
                int foo(const int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_0_0_0_0_1() {
        correct("""
                int foo(volatile int a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_0_0_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_1_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(long a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_2_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(double a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_3_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int* a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_4_0_0_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 long foo(struct { int a; } a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_5_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct S a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                long foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_6_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct T a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                long foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_7_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(const int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_8_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(volatile int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_9_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct_anonymous a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                long foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_1_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(long a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_2_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(double a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_3_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int* a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_4_0_0_0() {
        /* gcc reports:
test.c:2:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a);
                                   ^
test.c:2:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:24: error: conflicting types for 'foo'
                 double foo(struct { int a; } a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_5_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct S a);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                double foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_6_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct T a);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                double foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_7_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(const int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_8_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(volatile int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_9_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct_anonymous a);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                double foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_1_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(long a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_2_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(double a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_3_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int* a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_4_0_0_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(struct { int a; } a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_5_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct S a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                int* foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_6_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct T a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                int* foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_7_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(const int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_8_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(volatile int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_9_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct_anonymous a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                int* foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_1_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(long a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_2_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_3_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int* a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_4_0_0_0() {
        /* gcc reports:
test.c:2:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a);
                                              ^
test.c:2:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct { int a; } a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_5_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct S a);
                                   ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct { int a; } foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_6_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct T a);
                                   ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct { int a; } foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_7_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(const int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_8_0_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(volatile int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_9_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct_anonymous a);
                                   ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct { int a; } foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_1_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(long a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(double a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_3_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int* a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_4_0_0_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_5_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct S a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_6_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct T a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(int a);
                struct S foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_7_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(const int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_8_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_9_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct_anonymous a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int foo(int a);
                struct S foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_1_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(long a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(double a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_3_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int* a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_4_0_0_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a);
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(struct { int a; } a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_5_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct S a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(int a);
                struct T foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_6_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(struct T a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_7_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(const int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_8_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(volatile int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_9_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct_anonymous a);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_1_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(long a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_2_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(double a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_3_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int* a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_4_0_0_0() {
        /* gcc reports:
test.c:2:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a);
                                      ^
test.c:2:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(struct { int a; } a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_5_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct S a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                const int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_6_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct T a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                const int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_7_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(const int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_8_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(volatile int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_9_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                const int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_1_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(long a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                volatile int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_2_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(double a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(double a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                volatile int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_3_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int* a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int* a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                volatile int foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_4_0_0_0() {
        /* gcc reports:
test.c:2:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a);
                                         ^
test.c:2:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:41: warning: function return types not compatible due to 'volatile'
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(struct { int a; } a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                volatile int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_5_0_0_0() {
        /* gcc reports:
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct S a);
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct S a);
                              ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                volatile int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_6_0_0_0() {
        /* gcc reports:
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct T a);
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct T a);
                              ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                volatile int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_7_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(const int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                int foo(int a);
                volatile int foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_8_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(volatile int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                int foo(int a);
                volatile int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_9_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous a);
                              ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                volatile int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_1_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(long a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_2_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(double a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_3_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int* a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_4_0_0_0() {
        /* gcc reports:
test.c:4:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:4:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct { int a; } a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_5_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct S a);
                                  ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int foo(int a);
                struct_anonymous foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_6_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct T a);
                                  ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(int a);
                struct_anonymous foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_7_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(const int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_8_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(volatile int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_9_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct_anonymous a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_1_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(long a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_2_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(double a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_3_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int* a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_4_0_0_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_5_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct S a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                void foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_6_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct T a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                void foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_7_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(const int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_8_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(volatile int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_9_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct_anonymous a);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                void foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_0_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a, int c);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_0_1_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a, int c);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_0_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a, int c);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_0_1_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a, int c);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_0_1_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a, int c);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_0_1_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a, int c);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_0_1_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a, int c);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_0_1_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a, int c);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a, int c);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                volatile int foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_0_1_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a, int c);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_0_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a, int c);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_0_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int b);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_0_0_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int b);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_0_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int b);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_0_0_1_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int b);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_0_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int b);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_0_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int b);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_0_0_1_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int b);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_0_0_1_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int b);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                int foo(int a);
                volatile int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_0_0_1_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int b);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_0_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int b);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_1_0_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                long foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_2_0_0_0_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                double foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_3_0_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int* foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_4_0_0_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                struct { int a; } foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_5_0_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                struct S foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_6_0_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_7_0_0_0_1() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                const int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_0_0_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a);
                 ^
test.c:2:17: warning: function return types not compatible due to 'volatile'
test.c:2:17: warning: function return types not compatible due to 'volatile'

        */
        correct("""
                int foo(int a);
                volatile int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_9_0_0_0_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                struct_anonymous foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_10_0_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                void foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_1_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(long a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_2_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(double a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_3_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(int* a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_4_1_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a, int c);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(struct { int a; } a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_5_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a, int c);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                int foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_6_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a, int c);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                int foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_7_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(const int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_8_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(volatile int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_9_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a, int c);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                int foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_1_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(long b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_2_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_3_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(int* b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_4_0_1_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } b);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(struct { int a; } b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_5_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S b);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                int foo(struct S b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_6_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T b);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                int foo(struct T b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_7_0_1_0() {
        correct("""
                int foo(int a);
                int foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_8_0_1_0() {
        correct("""
                int foo(int a);
                int foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_9_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous b);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                int foo(struct_anonymous b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_1_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_2_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_3_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_4_0_0_1() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(struct { int a; } a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_5_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int a);
                int foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_6_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct T' but argument is of type 'int'
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                int foo(struct T a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_7_0_0_1() {
        correct("""
                int foo(int a);
                int foo(const int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_8_0_0_1() {
        correct("""
                int foo(int a);
                int foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_9_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous a);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct_anonymous' but argument is of type 'int'
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int a);
                int foo(struct_anonymous a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_0_1_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                int foo(int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_0_1_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int a, int c);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(int a, int c);
                     ^

        */
        error("""
                int foo(int a);
                int foo(int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_0_0_0_1_1() {
        correct("""
                int foo(int a);
                int foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_3_8_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(volatile int a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int* foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_8_0_0_2_1_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(double a, int c) {};
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(double a, int c) {};
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(double a, int c) {};
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(double a, int c) {};
                 ^

        */
        error("""
                volatile int foo(int a);
                int foo(double a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_2_8_3_1_0_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(double a);
                        ^

        */
        error("""
                double foo(double a);
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_2_10_9_1_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct_anonymous a, int c);
                      ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(double a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(double a) {};
                void foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_9_9_3_8_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(volatile int a) {};
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct_anonymous a) {};
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(volatile int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct_anonymous a) {};
                int* foo(volatile int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_6_5_3_7_0_1_1() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(struct S a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_3_6_4_0_0_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a);
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct { int a; } a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo;
                struct T foo(struct { int a; } a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_10_9_6_2_1_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(double a, int c) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(double a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(double a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo;
                struct T foo(double a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_7_7_6_1_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting type qualifiers for 'foo'
                 struct T foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_2_8_1_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(volatile int a, int c);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                double foo(volatile int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_8_4_1_0_1_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(long b) {};
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(volatile int a);
                      ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(long b) {};
                        ^

        */
        error("""
                long foo(volatile int a);
                struct { int a; } foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_6_9_6_1_0_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct T a, int c) {};
                                  ^
test.c:5:24: note: previous declaration of 'foo' was here
                 double foo(struct T a);
                        ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct T' but argument is of type 'int'
                 struct_anonymous foo(struct T a, int c) {};
                                  ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo(struct T a, int c) {};
                                  ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct T a, int c) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                double foo(struct T a);
                struct_anonymous foo(struct T a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_3_0_2_9_1_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^

        */
        error("""
                int* foo(int a);
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_4_2_5_3_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int* b) {};
                          ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(double a);
                                   ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int* b) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(double a);
                struct S foo(int* b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_1_9_2_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(double a);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(long a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(long a);
                struct_anonymous foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_2_1_2_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(double a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(double a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_6_5_8_1_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a, int c) {};
                          ^
test.c:5:27: note: previous declaration of 'foo' was here
                 const int foo(struct T a);
                           ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(volatile int a, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(volatile int a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo(struct T a);
                struct S foo(volatile int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_8_1_1_7_0_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 long foo(const int a);
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 long foo(const int a);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(long a);
                              ^

        */
        error("""
                volatile int foo(long a);
                long foo(const int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_9_1_5_1_0_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(long a);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(long a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(long a);
                struct S foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_10_4_5_7_1_1_1() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a);
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct { int a; } a);
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                void foo(struct { int a; } a);
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_0_8_3_9_1_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct_anonymous a, int c) {};
                      ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(volatile int a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 int* foo(struct_anonymous a, int c) {};
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo(struct_anonymous a, int c) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(volatile int a) {};
                int* foo(struct_anonymous a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_1_0_6_0_1_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a, int c) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(int a) {};
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(int a) {};
                struct T foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_7_1_6_1_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct T a, int c);
                      ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(const int a) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(const int a) {};
                long foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_3_7_7_7_1_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(const int a, int c) {};
                           ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(const int a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(const int a, int c) {};
                 ^

        */
        error("""
                int* foo(const int a) {};
                const int foo(const int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_4_9_2_1_1_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(long a, int c);
                        ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct_anonymous a) {};
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(struct_anonymous a) {};
                double foo(long a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_5_7_4_4_0_0_1() {
        /* gcc reports:
test.c:4:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a) {};
                                              ^
test.c:4:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct { int a; } a) {};
                                   ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(const int a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct { int a; } foo(struct { int a; } a) {};
                                   ^
test.c: In function 'foo':
test.c:4:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct { int a; } a) {};
                                              ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(const int a) {};
                struct { int a; } foo(struct { int a; } a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_6_1_7_4_1_1_0() {
        /* gcc reports:
test.c:4:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } b, int c) {};
                                      ^
test.c:4:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct { int a; } b, int c) {};
                           ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(long a) {};
                          ^
test.c: In function 'foo':
test.c:4:38: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct { int a; } b, int c) {};
                                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(long a) {};
                const int foo(struct { int a; } b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_9_7_8_0_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(volatile int b);
                           ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct_anonymous a) {};
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a) {};
                const int foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_8_0_7_3_1_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(int a) {};
                              ^

        */
        error("""
                volatile int foo(int a) {};
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_9_0_10_3_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(int a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_10_7_9_9_1_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(const int a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(const int a) {};
                struct_anonymous foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_0_2_0_6_1_1_0() {
        correct("""
                int foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_8_2_5_1_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_2_3_4_2_0_1_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(double b) {};
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(double b) {};
                        ^

        */
        error("""
                double foo;
                struct { int a; } foo(double b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_3_6_10_0_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(int b, int c) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(int b, int c) {};
                      ^

        */
        error("""
                int* foo;
                void foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_4_7_4_9_0_0_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(struct_anonymous a);
                                   ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo;
                struct { int a; } foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_5_6_5_3_0_0_0() {
        correct("""
              struct S { int x; int y; };

                struct S foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_6_0_8_4_1_0_1() {
        /* gcc reports:
test.c:4:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_2_10_7_1_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting type qualifiers for 'foo'
                 void foo;
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_9_7_0_0_1_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(int b);
                           ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                const int foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_8_1_6_0_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_8_10_2_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(double a, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                void foo(double a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_0_5_9_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                void foo(int a);
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_1_1_6_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(long a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(long a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_2_6_3_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int* b);
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(double a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(double a);
                struct T foo(int* b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_2_3_8_9_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous a);
                              ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int* a);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(int* a);
                volatile int foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_5_4_0_6_0_1_1() {
        /* gcc reports:
test.c:5:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:5:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct T b) {};
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:21: note: expected 'struct T' but argument is of type 'int'
                 int foo(struct T b) {};
                     ^
test.c: In function 'foo':
test.c:6:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct T b) {};
                                ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                int foo(struct T b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_3_5_9_8_1_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:22: note: previous declaration of 'foo' was here
                 int* foo(struct S a);
                      ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int* foo(struct S a);
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_1_6_0_2_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a) {};
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct T a);
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(double a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(struct T a);
                int foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_7_7_0_1_1_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int b, int c);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^

        */
        error("""
                long foo(const int a);
                const int foo(int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_8_10_6_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(volatile int a);
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a);
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_4_9_8_9_0_0_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous a) {};
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous a) {};
                              ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct_anonymous a);
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct_anonymous' but argument is of type 'int'
                 volatile int foo(struct_anonymous a) {};
                              ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(struct_anonymous a);
                volatile int foo(struct_anonymous a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_8_0_7_1_1_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 const int foo(long a, int c) {};
                 ^
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(long a, int c) {};
                           ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(int a) {};
                              ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo(long a, int c) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(long a, int c) {};
                 ^

        */
        error("""
                volatile int foo(int a) {};
                const int foo(long a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_6_1_10_5_0_0_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(struct S a) {};
                      ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(long a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(long a) {};
                void foo(struct S a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_2_2_1_0_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int b, int c) {};
                      ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(double a) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int b, int c) {};
                 ^

        */
        error("""
                double foo(double a) {};
                long foo(int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_5_3_2_7_1_1_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(const int b, int c) {};
                        ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(int* a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(const int b, int c) {};
                        ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(const int b, int c) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int* a) {};
                double foo(const int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_9_4_4_2_0_0_1() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a) {};
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double a) {};
                                   ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct { int a; } a) {};
                                  ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(double a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a) {};
                struct { int a; } foo(double a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_0_5_3_1_0_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(long a);
                      ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct S a) {};
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a) {};
                int* foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_6_8_4_1_0_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct T a) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(struct T a) {};
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_7_1_0_1_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int b, int c);
                      ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(const int a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo(int b, int c);
                      ^

        */
        error("""
                const int foo(const int a) {};
                long foo(int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_8_4_4_0_1_0() {
        /* gcc reports:
test.c:2:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } b) {};
                                              ^
test.c:2:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct { int a; } b) {};
                                   ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(volatile int a) {};
                           ^
test.c: In function 'foo':
test.c:2:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct { int a; } b) {};
                                              ^

        */
        error("""
                const int foo(volatile int a) {};
                struct { int a; } foo(struct { int a; } b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_9_8_5_0_0_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a) {};
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_0_10_7_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(const int a) {};
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                void foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_2_1_6_5_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_2_4_0_1_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_1_3_0_8_1_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(volatile int a, int c) {};
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(volatile int a, int c) {};
                 ^

        */
        error("""
                long foo;
                int foo(volatile int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_4_5_5_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting type qualifiers for 'foo'
                 struct S foo;
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_5_4_8_1_1_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(volatile int b, int c);
                                   ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo(volatile int b, int c);
                                   ^

        */
        error("""
                volatile int foo;
                struct { int a; } foo(volatile int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_7_6_5_3_0_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int* b) {};
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int* b) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                const int foo;
                struct S foo(int* b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_1_7_0_3_0_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int* a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                int foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_8_6_9_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_2_9_6_2_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(double b) {};
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(double b) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo(double b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_6_7_0_2_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double a) {};
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(const int a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(double a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a);
                int foo(double a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_0_1_0_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_8_2_5_1_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct S a, int c);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(volatile int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(volatile int a);
                double foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_8_3_6_1_0_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 int* foo(struct T a, int c);
                      ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(volatile int a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T a, int c);
                      ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 int* foo(struct T a, int c);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(volatile int a);
                int* foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_4_2_1_1_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double b, int c);
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                struct { int a; } foo(double b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_5_5_5_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct S b);
                          ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct S a);
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S b);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a);
                struct S foo(struct S b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_0_5_6_4_0_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(struct S a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_4_3_7_6_1_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct T a, int c);
                           ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int* a);
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(int* a);
                const int foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_9_8_0_0_1_0() {
        /* gcc reports:
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int b);
                              ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct_anonymous a);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(struct_anonymous a);
                volatile int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_3_9_7_1_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int* a);
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_4_7_10_4_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(const int a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo;
                      ^

        */
        error("""
                struct { int a; } foo(const int a);
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_1_0_5_0_1_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S b);
                     ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(long a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(long a) {};
                int foo(struct S b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_8_3_1_9_1_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 long foo(struct_anonymous b, int c) {};
                 ^
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct_anonymous b, int c) {};
                      ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(int* a) {};
                              ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(int* a) {};
                long foo(struct_anonymous b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_5_2_7_0_1_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(const int b);
                        ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct S a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct S a) {};
                double foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_1_3_5_1_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(long a) {};
                      ^

        */
        error("""
                void foo(long a) {};
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_10_3_4_2_1_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double a, int c);
                                   ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(int* a) {};
                      ^

        */
        error("""
                void foo(int* a) {};
                struct { int a; } foo(double a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_4_5_4_1_0_1() {
        /* gcc reports:
test.c:3:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a) {};
                                      ^
test.c:3:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a, int c);
                                     ^
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } a, int c);
                          ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct { int a; } a) {};
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct S foo(struct { int a; } a, int c);
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct { int a; } a, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(struct { int a; } a) {};
                struct S foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_1_9_6_2_0_1_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(double b);
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 long foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                long foo(struct_anonymous a) {};
                struct T foo(double b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_0_7_9_1_1_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
                int foo(int a) {};
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_1_6_8_6_1_0_1() {
        /* gcc reports:
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct T a, int c);
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct T a, int c);
                              ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct T a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct T' but argument is of type 'int'
                 volatile int foo(struct T a, int c);
                              ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(struct T a, int c);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(struct T a) {};
                volatile int foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_7_8_9_0_1_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(volatile int a) {};
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(volatile int a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_2_7_10_4_1_1_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } b, int c) {};
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } b, int c) {};
                      ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(const int a) {};
                        ^

        */
        error("""
                double foo(const int a) {};
                void foo(struct { int a; } b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_1_5_0_0_0_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int a);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                int foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_5_1_1_6_0_0_0() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct T a) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'foo':
test.c:6:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct T a) {};
                                 ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo;
                long foo(struct T a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_7_6_2_1_0_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(long a) {};
                        ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(long a) {};
                 ^

        */
        error("""
                const int foo;
                double foo(long a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_3_3_0_1_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting type qualifiers for 'foo'
                 int* foo;
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_5_1_4_2_0_0_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_6_5_3_1_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int* b, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(int* b, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                struct S foo(int* b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_6_4_6_9_1_0_1() {
        correct("""
              struct T { int x; int y; int z; };

                struct T foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_7_7_9_1_1_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(struct_anonymous b, int c);
                           ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo;
                const int foo(struct_anonymous b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_0_8_3_1_1_0() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_9_4_9_5_0_1_1() {
        correct("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_6_4_10_7_1_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_5_0_8_0_1_1_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_2_1_0_0_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(long a);
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                double foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_8_0_1_2_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
                volatile int foo(int a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_7_7_9_3_0_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(const int a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(const int a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_7_6_4_0_1_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } b) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(struct { int a; } b) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } b) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(const int a);
                struct T foo(struct { int a; } b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_6_5_5_1_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct S a, int c);
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 long foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                long foo(struct T a);
                struct S foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_3_2_6_6_1_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(struct T a, int c) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(double a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct T' but argument is of type 'int'
                 struct T foo(struct T a, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(struct T a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct T a, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(double a);
                struct T foo(struct T a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_9_6_5_7_1_0_1() {
        /* gcc reports:
test.c:8:26: error: conflicting types for 'foo'
                 struct S foo(const int a, int c) {};
                          ^
test.c:7:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct T a);
                                  ^
test.c: In function 'main':
test.c:9:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:8:26: note: declared here
                 struct S foo(const int a, int c) {};
                          ^
test.c: In function 'foo':
test.c:8:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(const int a, int c) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct_anonymous foo(struct T a);
                struct S foo(const int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_5_8_1_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(volatile int a, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int a);
                struct S foo(volatile int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_7_9_8_9_0_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous b) {};
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous b) {};
                              ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct_anonymous a);
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a);
                volatile int foo(struct_anonymous b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_2_1_0_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(double a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo;
                      ^

        */
        error("""
                void foo(double a) {};
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_1_9_1_1_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(long a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_10_5_0_2_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(double b) {};
                     ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct S a) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(double b) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                void foo(struct S a) {};
                int foo(double b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_4_8_3_1_0_0() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a) {};
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int* a, int c);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int* a, int c);
                              ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct { int a; } a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a) {};
                volatile int foo(int* a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_9_0_0_4_0_1_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_5_4_8_5_1_1_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a) {};
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct S b, int c);
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct S b, int c);
                              ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(struct { int a; } a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct S' but argument is of type 'int'
                 volatile int foo(struct S b, int c);
                              ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(struct S b, int c);
                              ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a) {};
                volatile int foo(struct S b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_10_6_0_6_1_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a, int c) {};
                     ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct T a) {};
                      ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct T a, int c) {};
                                ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(struct T a) {};
                int foo(struct T a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_6_3_9_7_1_0_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(const int a, int c) {};
                                  ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(int* a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo(const int a, int c) {};
                                  ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(const int a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(int* a) {};
                struct_anonymous foo(const int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_0_5_5_8_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int b, int c) {};
                          ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct S a) {};
                     ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(volatile int b, int c) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a) {};
                struct S foo(volatile int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_7_4_1_9_1_1_1() {
        /* gcc reports:
test.c:1:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a) {};
                                      ^
test.c:1:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(struct { int a; } a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo;
                      ^

        */
        error("""
                const int foo(struct { int a; } a) {};
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_4_10_0_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_3_9_6_1_1_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(long b, int c) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(long b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo;
                struct T foo(long b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_2_6_2_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(double a, int c) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(double a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo;
                struct T foo(double a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_5_9_3_0_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int* a);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo;
                struct_anonymous foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_0_2_4_1_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting type qualifiers for 'foo'
                 double foo;
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_3_3_10_5_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct S b) {};
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 void foo(struct S b) {};
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo;
                void foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_3_4_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct T a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo;
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_6_1_7_7_1_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_4_9_8_1_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(volatile int a, int c);
                                  ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo;
                struct_anonymous foo(volatile int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_4_4_1_9_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct_anonymous a, int c);
                      ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo;
                long foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_4_7_8_0_0_1() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a);
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(struct { int a; } a);
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
                void foo(struct { int a; } a);
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_1_3_0_5_1_1_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S b, int c);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int* a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S b, int c);
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct S b, int c);
                     ^

        */
        error("""
              struct S { int x; int y; };

                long foo(int* a);
                int foo(struct S b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_10_9_5_2_0_1_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                void foo(struct_anonymous a) {};
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_4_1_4_1_0_1() {
        /* gcc reports:
test.c:1:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a) {};
                                      ^
test.c:1:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a, int c) {};
                                 ^
test.c:2:22: error: conflicting types for 'foo'
                 long foo(struct { int a; } a, int c) {};
                      ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(struct { int a; } a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 long foo(struct { int a; } a, int c) {};
                      ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo(struct { int a; } a, int c) {};
                      ^
test.c: In function 'foo':
test.c:2:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct { int a; } a, int c) {};
                                 ^

        */
        error("""
                const int foo(struct { int a; } a) {};
                long foo(struct { int a; } a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_2_9_6_9_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_1_6_9_1_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct_anonymous a, int c);
                          ^
test.c:5:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct T foo(struct_anonymous a, int c);
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(struct_anonymous a, int c);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                double foo;
                struct T foo(struct_anonymous a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_1_9_10_8_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(volatile int a) {};
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a);
                void foo(volatile int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_9_0_4_0_1_1() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } b) {};
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } b) {};
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct_anonymous a);
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int foo(struct { int a; } b) {};
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct { int a; } b) {};
                                ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a);
                int foo(struct { int a; } b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_8_3_5_0_0_0_0() {
        /* gcc reports:
test.c:4:24: warning: function return types not compatible due to 'volatile'
                 struct S foo(int a) {};
                        ^
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a) {};
                          ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(int* a) {};
                              ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(int* a) {};
                struct S foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_7_8_9_1_1_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous b, int c);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous b, int c);
                              ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(const int a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct_anonymous' but argument is of type 'int'
                 volatile int foo(struct_anonymous b, int c);
                              ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(struct_anonymous b, int c);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(const int a) {};
                volatile int foo(struct_anonymous b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_5_9_8_1_1_0_1() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(long a, int c) {};
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(long a, int c) {};
                              ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(long a, int c) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                volatile int foo(long a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_7_9_2_6_1_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting type qualifiers for 'foo'
                 double foo;
                        ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_2_6_7_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(double a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(double a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_8_7_7_0_0_1() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(const int a);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(volatile int a);
                      ^

        */
        error("""
                int* foo(volatile int a);
                const int foo(const int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_1_5_0_1_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int b, int c);
                          ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(long a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(long a) {};
                struct S foo(int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_3_7_5_0_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(const int a) {};
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(const int a) {};
                struct S foo(int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_3_8_0_1_0_0() {
        /* gcc reports:
test.c:4:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_4_9_7_0_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(const int b) {};
                                  ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(const int b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                struct_anonymous foo(const int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_10_4_0_1_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } b);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } b);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                void foo(struct { int a; } b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_7_0_1_1_1_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long b, int c);
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(const int a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(long b, int c);
                     ^

        */
        error("""
                long foo(const int a) {};
                int foo(long b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_2_4_9_0_1_0_0() {
        /* gcc reports:
test.c:3:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a) {};
                                   ^
test.c:3:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a, int c);
                                  ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct { int a; } a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(struct { int a; } a) {};
                struct_anonymous foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_5_3_6_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct T a);
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo;
                int* foo(struct T a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_4_3_2_0_1_1_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int b, int c);
                        ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int* a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(int b, int c);
                        ^

        */
        error("""
                struct { int a; } foo(int* a);
                double foo(int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_5_6_10_9_1_0_0() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct_anonymous a, int c);
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                void foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_0_2_4_1_1_0() {
        /* gcc reports:
test.c:4:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } b, int c);
                                   ^
test.c:4:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct { int a; } b, int c);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                double foo(struct { int a; } b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_4_8_8_1_1_1() {
        /* gcc reports:
test.c:1:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a) {};
                                      ^
test.c:1:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(volatile int b, int c);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(volatile int b, int c);
                              ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(struct { int a; } a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:30: note: declared here
                 volatile int foo(volatile int b, int c);
                              ^

        */
        error("""
                const int foo(struct { int a; } a) {};
                volatile int foo(volatile int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_8_3_9_8_0_1_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 struct_anonymous foo(volatile int b);
                 ^
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(volatile int b);
                                  ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int* a);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(int* a);
                struct_anonymous foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_4_8_5_0_1_1() {
        /* gcc reports:
test.c:5:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a) {};
                                             ^
test.c:5:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct S b);
                                         ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct S b);
                              ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct { int a; } a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: expected 'struct S' but argument is of type 'int'
                 volatile int foo(struct S b);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct { int a; } a) {};
                volatile int foo(struct S b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_10_4_5_8_1_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(volatile int a, int c);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(volatile int a, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                struct S foo(volatile int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_3_3_2_1_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(double a, int c) {};
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(double a, int c) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(double a, int c) {};
                 ^

        */
        error("""
                int foo(int* a);
                int* foo(double a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_1_2_2_7_0_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(const int b) {};
                        ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(double a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(const int b) {};
                 ^

        */
        error("""
                long foo(double a) {};
                double foo(const int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_2_5_10_6_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct T a, int c) {};
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                void foo(struct T a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_3_0_2_6_0_1_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct T b) {};
                        ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct T' but argument is of type 'int'
                 double foo(struct T b) {};
                        ^
test.c: In function 'foo':
test.c:4:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct T b) {};
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(int a);
                double foo(struct T b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_4_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a) {};
                     ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(volatile int a) {};
                 ^

        */
        error("""
                struct { int a; } foo(int a) {};
                int foo(volatile int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_6_9_7_0_0_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(const int a) {};
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(const int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                struct_anonymous foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_6_0_0_1_1_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long b, int c) {};
                     ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(int a) {};
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(long b, int c) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a) {};
                int foo(long b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_5_10_6_0_1_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(struct T b) {};
                      ^
test.c:5:27: note: previous definition of 'foo' was here
                 const int foo(struct S a) {};
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo(struct S a) {};
                void foo(struct T b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_6_6_4_1_1_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } b, int c) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } b, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo;
                struct T foo(struct { int a; } b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_9_1_1_6_0_1_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 long foo(struct T b) {};
                      ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(long a) {};
                                  ^
test.c: In function 'foo':
test.c:6:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct T b) {};
                                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(long a) {};
                long foo(struct T b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_1_10_5_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct S a) {};
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 void foo(struct S a) {};
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                void foo(struct S a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_2_9_2_1_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(double a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(double a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_1_7_6_5_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(const int a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_3_4_6_0_1_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_9_1_3_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a) {};
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_4_0_1_2_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_5_6_2_4_1_1_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_6_7_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(const int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_7_9_4_7_0_0_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct_anonymous a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_8_6_10_3_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct T a);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct T a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_5_4_3_1_0_0() {
        /* gcc reports:
test.c:6:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct S a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_8_10_4_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(volatile int a);
                      ^

        */
        error("""
                void foo(volatile int a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_0_9_3_1_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int* b, int c);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo(int* b, int c);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                struct_anonymous foo(int* b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_2_1_10_7_1_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(const int b, int c);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(long a);
                        ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(const int b, int c);
                      ^

        */
        error("""
                double foo(long a);
                void foo(const int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_2_7_2_1_1_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(double b, int c);
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(double a);
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo(double b, int c);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(double a);
                const int foo(double b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_5_3_5_0_1_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int a, int c);
                          ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(int* a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(int a, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int* a) {};
                struct S foo(int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_4_4_5_8_0_0_1() {
        /* gcc reports:
test.c:3:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a) {};
                                              ^
test.c:3:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a);
                          ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct { int a; } a) {};
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct { int a; } a) {};
                struct S foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_10_5_3_4_1_1_1() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } b, int c);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct { int a; } b, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int* foo(struct { int a; } b, int c);
                      ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(struct { int a; } b, int c);
                      ^

        */
        error("""
                void foo;
                int* foo(struct { int a; } b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_0_6_1_1_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(long b);
                      ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct T a) {};
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a) {};
                long foo(long b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_7_8_1_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(long a);
                              ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(const int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a) {};
                volatile int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_8_4_0_0_1() {
        /* gcc reports:
test.c:2:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a);
                                         ^
test.c:2:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:41: warning: function return types not compatible due to 'volatile'
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(struct { int a; } a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:30: note: expected 'struct <anonymous>' but argument is of type 'int'
                 volatile int foo(struct { int a; } a);
                              ^

        */
        error("""
                int foo(volatile int a);
                volatile int foo(struct { int a; } a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_2_9_1_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct_anonymous a, int c);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                double foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_0_1_5_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct S b, int c) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 long foo(struct S b, int c) {};
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo(struct S b, int c) {};
                      ^
test.c: In function 'foo':
test.c:4:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct S b, int c) {};
                                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                long foo(struct S b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_1_0_4_0_1_1() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } b) {};
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } b) {};
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int foo(struct { int a; } b) {};
                     ^
test.c: In function 'foo':
test.c:2:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct { int a; } b) {};
                                ^

        */
        error("""
                int foo(long a);
                int foo(struct { int a; } b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_0_2_10_1_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(long b, int c) {};
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(long b, int c) {};
                      ^

        */
        error("""
                int foo;
                void foo(long b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_3_5_8_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int b, int c) {};
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(volatile int b, int c) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                int foo(int* a);
                struct S foo(volatile int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_4_7_5_1_0_1() {
        /* gcc reports:
test.c:3:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a) {};
                                      ^
test.c:3:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct S a, int c) {};
                           ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct { int a; } a) {};
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct S' but argument is of type 'int'
                 const int foo(struct S a, int c) {};
                           ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo(struct S a, int c) {};
                           ^
test.c: In function 'foo':
test.c:4:38: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct S a, int c) {};
                                      ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(struct { int a; } a) {};
                const int foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_5_6_4_1_1_1() {
        /* gcc reports:
test.c:6:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } b, int c) {};
                                     ^
test.c:6:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:5:27: note: previous definition of 'foo' was here
                 const int foo(struct S a) {};
                           ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } b, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo(struct S a) {};
                struct T foo(struct { int a; } b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_5_6_8_2_0_0_0() {
        /* gcc reports:
test.c:6:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(double a) {};
                 ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(double a) {};
                              ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(struct T a) {};
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(double a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a) {};
                volatile int foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_7_10_9_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct_anonymous b) {};
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 void foo(struct_anonymous b) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo;
                void foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_8_7_9_0_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous b) {};
                           ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(volatile int a) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(volatile int a) {};
                const int foo(struct_anonymous b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_9_9_0_1_0_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int a, int c) {};
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                struct_anonymous foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_0_4_7_0_1_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_6_1_4_3_0_1_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(long a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(long a) {};
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_1_2_5_7_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(double a);
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                long foo(double a);
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_2_3_8_5_1_1_1() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_3_4_9_2_0_1_1() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a);
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct { int a; } a);
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct { int a; } a);
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_5_3_8_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct S a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct S a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_6_1_4_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct T a);
                        ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(struct T a);
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_4_7_8_3_1_0_0() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_8_2_8_1_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting type qualifiers for 'foo'
                 double foo;
                        ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_9_2_2_0_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_2_0_1_1_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a, int c);
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(double a) {};
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(long a, int c);
                     ^

        */
        error("""
                int foo(double a) {};
                int foo(long a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_7_1_8_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(volatile int b, int c);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(const int a);
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo(volatile int b, int c);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a);
                long foo(volatile int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_4_2_1_1_0_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:24: error: conflicting types for 'foo'
                 double foo(long a, int c);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(long a, int c);
                        ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                double foo(long a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_3_3_6_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct T a, int c);
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T a, int c);
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo(struct T a, int c);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                int* foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_4_4_2_0_0_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double a);
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                struct { int a; } foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_9_5_4_1_1_0() {
        /* gcc reports:
test.c:6:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b, int c);
                                     ^
test.c:6:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } b, int c);
                          ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct_anonymous a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct_anonymous a) {};
                struct S foo(struct { int a; } b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_4_6_0_0_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int b);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_3_7_9_0_0_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous a);
                           ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(int* a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct_anonymous' but argument is of type 'int'
                 const int foo(struct_anonymous a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int* a) {};
                const int foo(struct_anonymous a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_5_8_5_1_1_1() {
        /* gcc reports:
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct S b, int c);
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct S b, int c);
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct S a);
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct S' but argument is of type 'int'
                 volatile int foo(struct S b, int c);
                              ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(struct S b, int c);
                              ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct S a);
                volatile int foo(struct S b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_0_9_8_0_1_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(volatile int b);
                                  ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(int a) {};
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(int a) {};
                struct_anonymous foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_9_10_2_0_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(double b);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                void foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_8_1_0_8_0_1_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int foo(volatile int b) {};
                 ^
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int b) {};
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(long a);
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(volatile int b) {};
                 ^

        */
        error("""
                volatile int foo(long a);
                int foo(volatile int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_5_8_1_7_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(const int b, int c) {};
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(volatile int a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo(const int b, int c) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(const int b, int c) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(volatile int a) {};
                long foo(const int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_0_2_3_0_0_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int* a) {};
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int* a) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                double foo(int* a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_0_3_2_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(double b, int c) {};
                      ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(int a) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(double b, int c) {};
                 ^

        */
        error("""
                const int foo(int a) {};
                int* foo(double b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_5_7_4_7_0_1_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(const int b) {};
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(const int a);
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(const int b) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(const int a);
                struct { int a; } foo(const int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_4_5_4_1_1_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b, int c) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct { int a; } b, int c) {};
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct S foo(struct { int a; } b, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct { int a; } b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct { int a; } b, int c) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                struct S foo(struct { int a; } b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_10_9_6_9_0_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct_anonymous a) {};
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct T foo(struct_anonymous a) {};
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct_anonymous a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                void foo(struct_anonymous a) {};
                struct T foo(struct_anonymous a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_1_2_7_9_0_1_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous b) {};
                           ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(double a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct_anonymous' but argument is of type 'int'
                 const int foo(struct_anonymous b) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(double a);
                const int foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_9_8_0_0_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int b) {};
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int b) {};
                              ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct_anonymous a) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a) {};
                volatile int foo(int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_7_9_6_0_0_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct T a) {};
                                  ^
test.c:5:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct T a) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                void foo;
                struct_anonymous foo(struct T a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_10_3_10_6_1_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct T a, int c) {};
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int* a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(int* a);
                void foo(struct T a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_4_7_0_9_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(const int a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(const int a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_7_0_1_5_0_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(int a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo;
                      ^

        */
        error("""
                const int foo(int a) {};
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_5_9_2_9_0_0_0() {
        /* gcc reports:
test.c:6:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(struct_anonymous a);
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_2_4_3_7_0_1_0() {
        /* gcc reports:
test.c:1:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a) {};
                                   ^
test.c:1:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(struct { int a; } a) {};
                        ^

        */
        error("""
                double foo(struct { int a; } a) {};
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_4_3_4_3_0_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_3_5_0_0_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int* a);
                          ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(int* a);
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_8_7_6_2_1_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(const int a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(const int a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_6_7_5_0_0_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct T a) {};
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a) {};
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_7_1_8_8_1_1_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(long a) {};
                           ^

        */
        error("""
                const int foo(long a) {};
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_9_5_9_3_0_0_1() {
        correct("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_9_8_10_9_0_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_4_0_1_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a, int c);
                                   ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                struct { int a; } foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_5_2_1_0_0_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(long a);
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                double foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_9_1_5_2_1_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(double a, int c);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(double a, int c);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo;
                struct S foo(double a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_6_1_7_3_1_1_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(int* b, int c);
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                const int foo(int* b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_5_8_4_1_1_1() {
        /* gcc reports:
test.c:6:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } b, int c);
                                         ^
test.c:6:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:41: warning: function return types not compatible due to 'volatile'
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct { int a; } b, int c);
                              ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct S a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: expected 'struct <anonymous>' but argument is of type 'int'
                 volatile int foo(struct { int a; } b, int c);
                              ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: declared here
                 volatile int foo(struct { int a; } b, int c);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a);
                volatile int foo(struct { int a; } b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_7_3_0_5_1_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a, int c);
                     ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(int* a) {};
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S a, int c);
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct S a, int c);
                     ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(int* a) {};
                int foo(struct S a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_3_7_0_6_1_1_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T b, int c);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(const int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct T' but argument is of type 'int'
                 int foo(struct T b, int c);
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct T b, int c);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(const int a);
                int foo(struct T b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_10_7_4_7_0_1_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(const int b);
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(const int a);
                      ^

        */
        error("""
                void foo(const int a);
                struct { int a; } foo(const int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_10_4_8_8_0_1_0() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a);
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(volatile int b);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(volatile int b);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(struct { int a; } a);
                      ^

        */
        error("""
                void foo(struct { int a; } a);
                volatile int foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_2_8_9_1_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous b, int c);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous b, int c);
                              ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(double a);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(double a);
                volatile int foo(struct_anonymous b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_2_8_4_0_0_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a) {};
                                   ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(volatile int a) {};
                        ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(int a) {};
                        ^

        */
        error("""
                double foo(volatile int a) {};
                struct { int a; } foo(int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_8_2_2_1_1_1_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(long b, int c) {};
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(long b, int c) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(long b, int c) {};
                 ^

        */
        error("""
                volatile int foo;
                double foo(long b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_1_5_4_2_1_1_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double b, int c) {};
                                   ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct S a);
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(double b, int c) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                long foo(struct S a);
                struct { int a; } foo(double b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_0_4_2_3_0_1_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(int* b) {};
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int* b) {};
                 ^

        */
        error("""
                int foo;
                double foo(int* b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_0_0_9_4_0_1_1() {
        /* gcc reports:
test.c:4:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } b) {};
                                             ^
test.c:4:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct { int a; } b) {};
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct_anonymous foo(struct { int a; } b) {};
                                  ^
test.c: In function 'foo':
test.c:4:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct { int a; } b) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                struct_anonymous foo(struct { int a; } b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_10_7_9_5_1_0_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct S a, int c) {};
                                  ^
test.c:5:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct S' but argument is of type 'int'
                 struct_anonymous foo(struct S a, int c) {};
                                  ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo(struct S a, int c) {};
                                  ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct S a, int c) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                void foo;
                struct_anonymous foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_2_6_6_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct T a) {};
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct T a) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo(struct T a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_9_2_7_1_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(const int a, int c) {};
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(const int a, int c) {};
                 ^

        */
        error("""
                volatile int foo;
                double foo(const int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_9_6_8_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(volatile int a, int c) {};
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(volatile int a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo;
                struct T foo(volatile int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_2_3_9_0_0_1() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct_anonymous a) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 int* foo(struct_anonymous a) {};
                      ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(struct_anonymous a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                int* foo(struct_anonymous a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_6_6_9_0_1_1_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(struct T a) {};
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct T a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_6_8_6_1_0_0_1() {
        correct("""
              struct T { int x; int y; int z; };

                struct T foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_8_3_2_1_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(volatile int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(volatile int a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_9_2_6_3_0_1_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_1_10_4_0_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(long a);
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo;
                      ^

        */
        error("""
                void foo(long a);
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_8_4_5_1_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(volatile int a) {};
                     ^

        */
        error("""
                int foo(volatile int a) {};
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_4_3_6_0_1_1() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a) {};
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(struct { int a; } a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                int* foo(struct { int a; } a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_8_7_4_7_0_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting type qualifiers for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_7_4_6_8_1_1_1() {
        /* gcc reports:
test.c:3:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a);
                                      ^
test.c:3:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct { int a; } a);
                           ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(struct { int a; } a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_7_4_9_0_1_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(const int a) {};
                        ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                double foo(const int a) {};
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_10_5_1_2_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(double a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                long foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_6_3_2_5_1_0_1() {
        /* gcc reports:
test.c:6:24: error: conflicting types for 'foo'
                 double foo(struct S a, int c);
                        ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(int* a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: expected 'struct S' but argument is of type 'int'
                 double foo(struct S a, int c);
                        ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: declared here
                 double foo(struct S a, int c);
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(int* a) {};
                double foo(struct S a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_10_9_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(int a) {};
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int a) {};
                 ^

        */
        error("""
                void foo;
                const int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_1_9_6_1_0_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct T a, int c) {};
                                  ^
test.c:5:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct T' but argument is of type 'int'
                 struct_anonymous foo(struct T a, int c) {};
                                  ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo(struct T a, int c) {};
                                  ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct T a, int c) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(long a) {};
                struct_anonymous foo(struct T a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_7_4_0_0_1_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(const int a);
                        ^

        */
        error("""
                double foo(const int a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_6_1_3_1_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting type qualifiers for 'foo'
                 long foo;
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_1_1_6_0_0_1() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct T a);
                      ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct T' but argument is of type 'int'
                 long foo(struct T a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                long foo(struct T a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_2_9_2_2_0_1_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(double b);
                        ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct_anonymous a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(struct_anonymous a) {};
                double foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_4_1_3_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int* a, int c) {};
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int* a, int c) {};
                 ^

        */
        error("""
                volatile int foo;
                long foo(int* a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_1_3_2_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(double b) {};
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(long a);
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(double b) {};
                 ^

        */
        error("""
                const int foo(long a);
                int* foo(double b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_7_3_9_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(const int a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                void foo(const int a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_5_5_0_0_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct S a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct S a) {};
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_4_4_1_0_0_0() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a) {};
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(long a);
                                   ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(struct { int a; } a) {};
                      ^

        */
        error("""
                long foo(struct { int a; } a) {};
                struct { int a; } foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_2_8_1_0_0_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(long a);
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(double a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(double a);
                volatile int foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_2_7_0_6_0_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T b) {};
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(const int a);
                        ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct T b) {};
                                ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(const int a);
                int foo(struct T b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_9_6_2_6_0_0_1() {
        /* gcc reports:
test.c:6:24: error: conflicting types for 'foo'
                 double foo(struct T a) {};
                        ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct T a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: expected 'struct T' but argument is of type 'int'
                 double foo(struct T a) {};
                        ^
test.c: In function 'foo':
test.c:6:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct T a) {};
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct T a);
                double foo(struct T a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_9_3_1_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct_anonymous a) {};
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a) {};
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_0_9_2_1_0_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(int a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(int a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_0_0_9_3_0_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int* b) {};
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int* b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                struct_anonymous foo(int* b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_0_1_6_3_1_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int* b, int c) {};
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int* b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                struct T foo(int* b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_2_0_0_1_1_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b, int c) {};
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(double a) {};
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(int b, int c) {};
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int b, int c) {};
                 ^

        */
        error("""
                int foo(double a) {};
                int foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_0_3_9_4_1_0_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_4_7_6_0_0_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(struct T a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                const int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_5_3_6_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_6_10_4_1_0_1() {
        /* gcc reports:
test.c:4:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a, int c);
                                 ^
test.c:4:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } a, int c);
                      ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct T a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 void foo(struct { int a; } a, int c);
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(struct { int a; } a, int c);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a) {};
                void foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_0_7_9_2_0_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(double b) {};
                                  ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(const int a) {};
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(double b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(const int a) {};
                struct_anonymous foo(double b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_0_8_7_6_1_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_9_4_6_0_0_0() {
        /* gcc reports:
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct T a) {};
                                   ^
test.c:5:21: note: previous definition of 'foo' was here
                 int foo(struct_anonymous a) {};
                     ^
test.c: In function 'foo':
test.c:6:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct T a) {};
                                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(struct_anonymous a) {};
                struct { int a; } foo(struct T a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_1_0_8_6_0_0_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_1_0_0_0_1_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(long a);
                      ^

        */
        error("""
                long foo(long a);
                int foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_2_2_3_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_3_8_8_1_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(volatile int a, int c);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(volatile int a, int c);
                              ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(int* a) {};
                      ^

        */
        error("""
                long foo(int* a) {};
                volatile int foo(volatile int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_4_1_4_1_0_1() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a) {};
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a, int c);
                                 ^
test.c:2:22: error: conflicting types for 'foo'
                 long foo(struct { int a; } a, int c);
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(struct { int a; } a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 long foo(struct { int a; } a, int c);
                      ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo(struct { int a; } a, int c);
                      ^

        */
        error("""
                long foo(struct { int a; } a) {};
                long foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_1_5_9_9_1_1_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:22: note: previous definition of 'foo' was here
                 long foo(struct S a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                long foo(struct S a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_1_6_3_7_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct T a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(struct T a) {};
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_1_7_1_1_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^

        */
        error("""
                long foo(const int a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_8_0_6_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a) {};
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(volatile int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct T' but argument is of type 'int'
                 int foo(struct T a) {};
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct T a) {};
                                ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(volatile int a);
                int foo(struct T a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_9_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo;
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_2_0_4_5_1_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_1_5_5_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct S a, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                struct S foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_2_0_7_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo;
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_3_10_0_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_4_1_0_0_0_0() {
        /* gcc reports:
test.c:1:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a);
                                   ^
test.c:1:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(struct { int a; } a);
                        ^

        */
        error("""
                double foo(struct { int a; } a);
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_2_5_1_4_0_1_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } b) {};
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct { int a; } b) {};
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'foo':
test.c:2:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct { int a; } b) {};
                                 ^

        */
        error("""
                double foo;
                long foo(struct { int a; } b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_2_6_0_5_0_0_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct T a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo;
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(struct T a) {};
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_2_7_6_4_0_0_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(struct { int a; } a) {};
                          ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(const int a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } a) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } a) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(const int a) {};
                struct T foo(struct { int a; } a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_2_8_1_4_1_1_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } b, int c) {};
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 long foo(struct { int a; } b, int c) {};
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(volatile int a);
                        ^
test.c: In function 'foo':
test.c:2:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct { int a; } b, int c) {};
                                 ^

        */
        error("""
                double foo(volatile int a);
                long foo(struct { int a; } b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_9_2_5_0_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct S a);
                        ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct S' but argument is of type 'int'
                 double foo(struct S a);
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                double foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_3_0_6_7_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(const int b, int c) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(int a);
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(const int b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(int a);
                struct T foo(const int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_3_1_4_9_0_1_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(long a);
                      ^

        */
        error("""
                int* foo(long a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_2_2_9_0_0_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(double a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo;
                        ^

        */
        error("""
                int* foo(double a) {};
                double foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_3_3_8_9_0_1_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct_anonymous b) {};
                              ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo;
                volatile int foo(struct_anonymous b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_4_6_0_1_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int a, int c);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(int a, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo;
                struct T foo(int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_3_5_4_5_0_1_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct S b) {};
                                   ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(struct S a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: expected 'struct S' but argument is of type 'int'
                 struct { int a; } foo(struct S b) {};
                                   ^
test.c: In function 'foo':
test.c:4:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct S b) {};
                                              ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(struct S a) {};
                struct { int a; } foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_3_6_1_8_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(struct T a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_7_0_8_0_1_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(volatile int b);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                int foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_8_9_1_1_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(long a, int c);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(volatile int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(volatile int a);
                struct_anonymous foo(long a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_3_9_6_6_0_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct T a);
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 int* foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct T' but argument is of type 'int'
                 struct T foo(struct T a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int* foo(struct_anonymous a) {};
                struct T foo(struct T a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_4_0_7_2_0_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_4_1_4_4_1_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(long a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(long a) {};
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_2_10_2_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(double b, int c);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(double a);
                                   ^

        */
        error("""
                struct { int a; } foo(double a);
                void foo(double b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_4_3_7_6_0_1_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct T b);
                           ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int* a) {};
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct T' but argument is of type 'int'
                 const int foo(struct T b);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(int* a) {};
                const int foo(struct T b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_4_4_8_9_0_1_1() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_4_5_4_8_1_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(volatile int a, int c);
                                   ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct S a) {};
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a) {};
                struct { int a; } foo(volatile int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_4_6_0_0_1_1_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int b, int c) {};
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct T a);
                                   ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int b, int c) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a);
                int foo(int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_7_9_6_1_0_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(const int a);
                                   ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(const int a);
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_4_8_10_8_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(volatile int a) {};
                      ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(volatile int a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(volatile int a) {};
                void foo(volatile int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_9_4_2_1_1_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double b, int c);
                                   ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct_anonymous a);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(struct_anonymous a);
                struct { int a; } foo(double b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_5_0_6_4_0_0_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(int a) {};
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_5_1_9_9_1_0_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo;
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_2_8_4_0_1_1() {
        /* gcc reports:
test.c:4:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } b);
                                         ^
test.c:4:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:41: warning: function return types not compatible due to 'volatile'
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct { int a; } b);
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(double a);
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct <anonymous>' but argument is of type 'int'
                 volatile int foo(struct { int a; } b);
                              ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(double a);
                volatile int foo(struct { int a; } b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_5_3_1_3_1_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_4_5_4_1_1_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b, int c);
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct { int a; } b, int c);
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct S foo(struct { int a; } b, int c);
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct { int a; } b, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                struct S foo(struct { int a; } b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_5_5_2_8_0_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(volatile int a);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                double foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_6_7_7_0_1_0() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(const int b);
                           ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct T a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a);
                const int foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_7_3_8_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(volatile int a, int c);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                int* foo(volatile int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_5_8_8_6_1_0_0() {
        /* gcc reports:
test.c:6:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct T a, int c);
                                         ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct T a, int c);
                              ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(volatile int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(volatile int a) {};
                volatile int foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_5_9_6_5_1_0_0() {
        /* gcc reports:
test.c:8:26: error: conflicting types for 'foo'
                 struct T foo(struct S a, int c) {};
                          ^
test.c:7:26: note: previous declaration of 'foo' was here
                 struct S foo(struct_anonymous a);
                          ^
test.c: In function 'foo':
test.c:8:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct S a, int c) {};
                                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct_anonymous a);
                struct T foo(struct S a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_0_5_5_1_1_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(int a);
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_1_5_3_0_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int* b) {};
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int* b) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                struct S foo(int* b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_2_0_4_1_0_1() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a, int c);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a, int c);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(double a);
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int foo(struct { int a; } a, int c);
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct { int a; } a, int c);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(double a);
                int foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_6_3_2_5_1_0_0() {
        /* gcc reports:
test.c:6:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct S a, int c) {};
                        ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:6:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct S a, int c) {};
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                double foo(struct S a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_6_4_7_4_1_0_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a) {};
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(struct { int a; } a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(struct { int a; } a) {};
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_6_5_9_0_0_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int b);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo;
                struct_anonymous foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_6_7_4_1_0_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(struct T a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(struct T a);
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_6_7_6_1_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(long b, int c) {};
                          ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(const int a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(long b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(long b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a) {};
                struct T foo(long b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_6_8_10_1_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(long b, int c) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(volatile int a);
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(long b, int c) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a);
                void foo(long b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_6_9_0_5_0_1_0() {
        /* gcc reports:
test.c:6:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(struct_anonymous a) {};
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct_anonymous a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_0_7_1_0_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(long b) {};
                           ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(long b) {};
                 ^

        */
        error("""
                const int foo(int a);
                const int foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_1_6_1_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(long a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(long a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_2_4_8_1_1_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(volatile int b, int c);
                                   ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(double a);
                           ^

        */
        error("""
                const int foo(double a);
                struct { int a; } foo(volatile int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_7_3_0_6_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(int* a) {};
                           ^

        */
        error("""
                const int foo(int* a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_4_5_8_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting type qualifiers for 'foo'
                 struct S foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_5_0_8_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(volatile int a);
                     ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct S a) {};
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(struct S a) {};
                int foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_7_6_7_5_0_1_1() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(struct S b) {};
                           ^
test.c:5:27: note: previous declaration of 'foo' was here
                 const int foo(struct T a);
                           ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:27: note: expected 'struct S' but argument is of type 'int'
                 const int foo(struct S b) {};
                           ^
test.c: In function 'foo':
test.c:6:38: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct S b) {};
                                      ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo(struct T a);
                const int foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_7_6_5_1_1_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct S b, int c) {};
                          ^
test.c:5:27: note: previous definition of 'foo' was here
                 const int foo(const int a) {};
                           ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct S' but argument is of type 'int'
                 struct T foo(struct S b, int c) {};
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(struct S b, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct S b, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo(const int a) {};
                struct T foo(struct S b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_7_8_0_0_1_1_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(volatile int a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo;
                     ^

        */
        error("""
                const int foo(volatile int a) {};
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_7_9_1_0_1_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int b, int c) {};
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int b, int c) {};
                 ^

        */
        error("""
                const int foo;
                long foo(int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_8_0_3_7_1_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int* foo(const int a, int c) {};
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(const int a, int c) {};
                      ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(int a) {};
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(const int a, int c) {};
                 ^

        */
        error("""
                volatile int foo(int a) {};
                int* foo(const int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_8_1_2_1_0_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 double foo(long a);
                 ^
test.c:2:24: error: conflicting types for 'foo'
                 double foo(long a);
                        ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(long a) {};
                              ^

        */
        error("""
                volatile int foo(long a) {};
                double foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_8_2_1_6_0_1_1() {
        /* gcc reports:
test.c:4:33: warning: function return types not compatible due to 'volatile'
                 long foo(struct T b);
                                 ^
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct T b);
                      ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(double a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 long foo(struct T b);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(double a) {};
                long foo(struct T b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_8_3_3_4_1_0_1() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a, int c);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct { int a; } a, int c);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int* foo(struct { int a; } a, int c);
                      ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(struct { int a; } a, int c);
                      ^

        */
        error("""
                volatile int foo;
                int* foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_8_4_4_6_1_0_1() {
        /* gcc reports:
test.c:3:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a) {};
                                         ^
test.c:3:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:46: warning: function return types not compatible due to 'volatile'
                 struct { int a; } foo(struct T a, int c) {};
                                              ^
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct T a, int c) {};
                                   ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct { int a; } a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: expected 'struct T' but argument is of type 'int'
                 struct { int a; } foo(struct T a, int c) {};
                                   ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo(struct T a, int c) {};
                                   ^
test.c: In function 'foo':
test.c:4:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct T a, int c) {};
                                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct { int a; } a) {};
                struct { int a; } foo(struct T a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_8_5_10_5_0_0_1() {
        /* gcc reports:
test.c:4:33: warning: function return types not compatible due to 'volatile'
                 void foo(struct S a);
                                 ^
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct S a);
                      ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct S a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 void foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct S a) {};
                void foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_8_6_1_2_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct T a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct T a) {};
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_8_7_8_6_0_1_0() {
        correct("""
                volatile int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_8_3_6_1_1_1() {
        /* gcc reports:
test.c:4:33: warning: function return types not compatible due to 'volatile'
                 int* foo(struct T b, int c);
                                 ^
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct T b, int c);
                      ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(volatile int a);
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T b, int c);
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo(struct T b, int c);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(volatile int a);
                int* foo(struct T b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_8_9_8_7_1_0_1() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct_anonymous a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo;
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(struct_anonymous a) {};
                volatile int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_0_9_0_0_0_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_1_3_2_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_9_2_10_4_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(double a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(double a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_9_3_6_1_1_1_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(long b, int c);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(long b, int c);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(int* a);
                struct T foo(long b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_9_4_2_4_1_0_1() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a) {};
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct { int a; } a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo;
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a) {};
                double foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_9_5_10_2_0_1_1() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct S a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_9_6_10_2_1_1_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(double b, int c) {};
                      ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct T a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 void foo(double b, int c) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct T a);
                void foo(double b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_7_3_3_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(const int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_8_6_0_1_1_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int b, int c);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                struct T foo(int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_9_9_7_4_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_0_3_9_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(int a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                void foo(int a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_10_1_3_3_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int* a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(long a);
                      ^

        */
        error("""
                void foo(long a);
                int* foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_10_2_6_9_1_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct_anonymous a, int c);
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 void foo(double a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                void foo(double a) {};
                struct T foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_3_0_7_0_1_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(const int b);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                int foo(const int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_10_4_10_0_1_0_0() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a);
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a, int c) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(struct { int a; } a);
                      ^

        */
        error("""
                void foo(struct { int a; } a);
                void foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_5_7_0_1_0_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(int a, int c) {};
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo(int a, int c) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int a, int c) {};
                 ^

        */
        error("""
                void foo;
                const int foo(int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_10_6_9_0_1_0_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:22: note: previous declaration of 'foo' was here
                 void foo(struct T a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                void foo(struct T a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_7_7_8_1_1_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(volatile int b, int c) {};
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo(volatile int b, int c) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(volatile int b, int c) {};
                 ^

        */
        error("""
                void foo;
                const int foo(volatile int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_10_8_3_5_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct S b);
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(volatile int a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 int* foo(struct S b);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(volatile int a) {};
                int* foo(struct S b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_10_9_2_2_0_1_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(double b) {};
                        ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct_anonymous a);
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(double b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a);
                double foo(double b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_2_0_0_1_1_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
                int foo(double a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_1_1_1_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(long a) {};
                      ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(long a) {};
                 ^

        */
        error("""
                int foo(long a) {};
                long foo(long a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_1_2_8_1_0_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(volatile int a, int c) {};
                        ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(volatile int a, int c) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(volatile int a, int c) {};
                 ^

        */
        error("""
                int foo(long a);
                double foo(volatile int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_9_3_8_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(volatile int b, int c) {};
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo(volatile int b, int c) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(volatile int b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                int* foo(volatile int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_2_4_1_0_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(double a) {};
                     ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                int foo(double a) {};
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_0_6_5_0_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo;
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_6_3_1_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(int* b, int c);
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(struct S a);
                struct T foo(int* b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_5_7_4_0_0_1() {
        /* gcc reports:
test.c:4:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a);
                                      ^
test.c:4:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct { int a; } a);
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct <anonymous>' but argument is of type 'int'
                 const int foo(struct { int a; } a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                const int foo(struct { int a; } a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_0_9_8_6_0_1_1() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_0_9_2_1_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_0_10_2_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(double b);
                      ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(int a) {};
                     ^

        */
        error("""
                int foo(int a) {};
                void foo(double b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_1_9_0_6_0_1_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_6_1_9_0_0_0() {
        correct("""
                long foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_1_7_2_4_1_0_0() {
        /* gcc reports:
test.c:2:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a, int c);
                                   ^
test.c:2:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct { int a; } a, int c);
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                double foo(struct { int a; } a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_5_3_7_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_1_0_4_8_0_1_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
                long foo(int a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_2_5_6_0_1_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct T b);
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 long foo(double a);
                      ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct T' but argument is of type 'int'
                 struct S foo(struct T b);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                long foo(double a);
                struct S foo(struct T b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_1_4_6_8_1_1_1() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a) {};
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct { int a; } a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(struct { int a; } a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_1_2_7_3_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int* a) {};
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(double a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int* a) {};
                 ^

        */
        error("""
                long foo(double a);
                const int foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_9_8_1_0_0_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(long a);
                              ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a) {};
                volatile int foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_9_9_5_0_1_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo;
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_7_10_5_0_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct S a);
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(const int a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 void foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo(const int a) {};
                void foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_2_3_0_4_0_0_1() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a) {};
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a) {};
                     ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(int* a) {};
                        ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int foo(struct { int a; } a) {};
                     ^
test.c: In function 'foo':
test.c:2:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct { int a; } a) {};
                                ^

        */
        error("""
                double foo(int* a) {};
                int foo(struct { int a; } a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_2_1_9_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct_anonymous b);
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo;
                long foo(struct_anonymous b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_4_2_0_1_0_1() {
        correct("""
                double foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_8_3_6_1_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct T a, int c);
                      ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(volatile int a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T a, int c);
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo(struct T a, int c);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(volatile int a) {};
                int* foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_8_4_2_1_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(volatile int a);
                        ^

        */
        error("""
                double foo(volatile int a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_7_5_2_1_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(double a, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(const int a);
                        ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(double a, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                double foo(const int a);
                struct S foo(double a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_9_6_6_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct T a, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_3_7_9_0_1_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous b);
                           ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(int* a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct_anonymous' but argument is of type 'int'
                 const int foo(struct_anonymous b);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(int* a) {};
                const int foo(struct_anonymous b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_2_8_8_3_0_1_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int* b) {};
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int* b) {};
                              ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(volatile int a) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int* b) {};
                 ^

        */
        error("""
                double foo(volatile int a) {};
                volatile int foo(int* b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_4_9_4_1_1_1() {
        /* gcc reports:
test.c:3:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a);
                                   ^
test.c:3:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } b, int c) {};
                                             ^
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct { int a; } b, int c) {};
                                  ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct { int a; } a);
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct_anonymous foo(struct { int a; } b, int c) {};
                                  ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo(struct { int a; } b, int c) {};
                                  ^
test.c: In function 'foo':
test.c:4:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct { int a; } b, int c) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(struct { int a; } a);
                struct_anonymous foo(struct { int a; } b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_10_5_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct S a);
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int a);
                void foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_7_0_9_0_1_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(const int a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo;
                     ^

        */
        error("""
                int* foo(const int a) {};
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_3_5_1_7_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(struct S a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_9_2_8_0_1_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo;
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a) {};
                double foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_3_7_3_4_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(const int a) {};
                      ^

        */
        error("""
                int* foo(const int a) {};
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_1_4_2_1_1_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(double b, int c);
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo(double b, int c);
                                   ^

        */
        error("""
                int* foo;
                struct { int a; } foo(double b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_3_3_5_7_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(const int b);
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(int* a) {};
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(int* a) {};
                struct S foo(const int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_3_5_6_2_1_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(double a, int c);
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 int* foo(struct S a) {};
                      ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(double a, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int* foo(struct S a) {};
                struct T foo(double a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_3_7_7_4_1_0_0() {
        /* gcc reports:
test.c:2:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a, int c);
                                      ^
test.c:2:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(struct { int a; } a, int c);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(const int a);
                      ^

        */
        error("""
                int* foo(const int a);
                const int foo(struct { int a; } a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_3_4_8_8_0_1_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(volatile int b) {};
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(volatile int b) {};
                 ^

        */
        error("""
                int* foo;
                volatile int foo(volatile int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_1_9_2_0_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(long a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(long a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_3_7_10_8_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(volatile int b) {};
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(const int a) {};
                      ^

        */
        error("""
                int* foo(const int a) {};
                void foo(volatile int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_4_3_0_5_0_1_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S b) {};
                     ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int* a);
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S b) {};
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct S b) {};
                                ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(int* a);
                int foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_4_6_1_5_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct S a, int c) {};
                      ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'foo':
test.c:4:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct S a, int c) {};
                                 ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo;
                long foo(struct S a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_4_2_2_1_0_1_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(long b) {};
                        ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(long b) {};
                 ^

        */
        error("""
                struct { int a; } foo;
                double foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_4_1_3_0_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int b);
                      ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(long a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(long a) {};
                int* foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_4_1_4_7_1_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(const int a, int c) {};
                                   ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(long a) {};
                                   ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(const int a, int c) {};
                        ^

        */
        error("""
                struct { int a; } foo(long a) {};
                struct { int a; } foo(const int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_4_0_5_5_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct S b, int c) {};
                          ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct S b, int c) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(int a) {};
                struct S foo(struct S b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_4_8_6_4_1_1_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } b, int c);
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct { int a; } b, int c);
                          ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } b, int c);
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(struct { int a; } b, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo;
                struct T foo(struct { int a; } b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_4_7_7_8_0_1_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(volatile int b);
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                const int foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_1_8_8_0_0_1() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(long a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:30: note: declared here
                 volatile int foo;
                              ^

        */
        error("""
                struct { int a; } foo(long a);
                volatile int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_4_9_9_5_1_1_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct S b, int c);
                                  ^
test.c:5:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct_anonymous a) {};
                                   ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct S' but argument is of type 'int'
                 struct_anonymous foo(struct S b, int c);
                                  ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo(struct S b, int c);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct { int a; } foo(struct_anonymous a) {};
                struct_anonymous foo(struct S b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_4_3_10_0_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int* a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(int* a) {};
                void foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_5_3_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(int* a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int* a) {};
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_5_2_1_6_0_1_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 long foo(struct T b) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(double a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct T' but argument is of type 'int'
                 long foo(struct T b) {};
                      ^
test.c: In function 'foo':
test.c:6:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct T b) {};
                                 ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(double a);
                long foo(struct T b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_5_5_2_5_1_0_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct S a, int c);
                        ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(struct S a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct S' but argument is of type 'int'
                 double foo(struct S a, int c);
                        ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(struct S a, int c);
                        ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct S a) {};
                double foo(struct S a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_5_8_3_4_0_0_1() {
        /* gcc reports:
test.c:4:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a) {};
                                 ^
test.c:4:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct { int a; } a) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int* foo(struct { int a; } a) {};
                      ^
test.c: In function 'foo':
test.c:4:33: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(struct { int a; } a) {};
                                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                int* foo(struct { int a; } a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_5_6_4_3_1_0_1() {
        /* gcc reports:
test.c:6:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(struct T a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a) {};
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_6_5_8_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a) {};
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct T a);
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(volatile int a) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a);
                struct S foo(volatile int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_5_1_6_6_1_0_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(long a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(long a) {};
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_5_1_7_7_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(const int a) {};
                           ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(long a) {};
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(const int a) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(long a) {};
                const int foo(const int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_0_8_6_1_1_1() {
        /* gcc reports:
test.c:6:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct T b, int c);
                              ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: expected 'struct T' but argument is of type 'int'
                 volatile int foo(struct T b, int c);
                              ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: declared here
                 volatile int foo(struct T b, int c);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo;
                volatile int foo(struct T b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_5_5_9_4_1_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(struct S a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(struct S a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_8_10_2_1_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(double b, int c);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(volatile int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(volatile int a);
                void foo(double b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_9_0_9_1_1_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct_anonymous a);
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct_anonymous a);
                int foo(struct_anonymous b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_6_8_1_1_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(long a);
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(volatile int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a) {};
                long foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_4_2_9_1_0_1() {
        /* gcc reports:
test.c:6:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct_anonymous a, int c);
                        ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: expected 'struct_anonymous' but argument is of type 'int'
                 double foo(struct_anonymous a, int c);
                        ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: declared here
                 double foo(struct_anonymous a, int c);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo;
                double foo(struct_anonymous a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_8_3_2_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(double b, int c);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(volatile int a);
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo(double b, int c);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a);
                int* foo(double b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_6_3_4_5_1_1_0() {
        /* gcc reports:
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct S b, int c) {};
                                   ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(int* a) {};
                          ^
test.c: In function 'foo':
test.c:6:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct S b, int c) {};
                                              ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(int* a) {};
                struct { int a; } foo(struct S b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_8_5_4_0_1_1() {
        /* gcc reports:
test.c:6:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b) {};
                                     ^
test.c:6:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct { int a; } b) {};
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct S foo(struct { int a; } b) {};
                          ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct { int a; } b) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                struct S foo(struct { int a; } b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_0_6_9_1_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_3_7_1_0_1_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(long b) {};
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(long b) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                const int foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_8_8_6_0_0_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct T a);
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                volatile int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_0_9_3_0_0_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(int a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_3_10_3_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(int* b);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                void foo(int* b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_7_3_0_6_0_0_0() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int* a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(int* a);
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_7_5_1_2_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct S a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(struct S a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_7_8_2_5_1_1_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct S b, int c) {};
                        ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct S' but argument is of type 'int'
                 double foo(struct S b, int c) {};
                        ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(struct S b, int c) {};
                        ^
test.c: In function 'foo':
test.c:4:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct S b, int c) {};
                                   ^

        */
        error("""
              struct S { int x; int y; };

                const int foo;
                double foo(struct S b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_8_3_0_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(volatile int a);
                           ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                const int foo(volatile int a);
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_8_4_7_0_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(const int a);
                                   ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                struct { int a; } foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_7_9_5_3_1_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:5:27: note: previous definition of 'foo' was here
                 const int foo(struct_anonymous a) {};
                           ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                const int foo(struct_anonymous a) {};
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_7_2_6_0_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting type qualifiers for 'foo'
                 struct T foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_7_7_7_0_0_1() {
        /* gcc reports:
test.c:2:27: error: redefinition of 'foo'
                 const int foo(const int a) {};
                           ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(const int a) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(const int a) {};
                 ^

        */
        error("""
                const int foo(const int a) {};
                const int foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_9_8_5_1_0_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct S a, int c);
                              ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo;
                volatile int foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_9_9_7_1_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting type qualifiers for 'foo'
                 struct_anonymous foo;
                                  ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_9_10_4_1_1_0() {
        /* gcc reports:
test.c:4:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } b, int c) {};
                                 ^
test.c:4:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } b, int c) {};
                      ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct_anonymous a) {};
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a) {};
                void foo(struct { int a; } b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_9_0_9_1_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct_anonymous a, int c) {};
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo;
                int foo(struct_anonymous a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_2_1_0_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int a, int c);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                long foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_2_2_0_0_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting type qualifiers for 'foo'
                 double foo;
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_8_1_3_9_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(long a);
                              ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                volatile int foo(long a);
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_8_2_4_3_0_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting type qualifiers for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_8_5_3_0_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int* a) {};
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int* a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo;
                struct S foo(int* a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_8_5_6_9_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting type qualifiers for 'foo'
                 struct T foo;
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_8_5_7_9_0_0_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct S a) {};
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct S a) {};
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_6_8_6_0_0_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct T a);
                              ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo;
                volatile int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_8_1_9_2_1_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(long a);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(long a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_0_10_4_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting type qualifiers for 'foo'
                 void foo;
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_8_0_5_1_1_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S b, int c);
                     ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(volatile int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(volatile int a);
                int foo(struct S b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_9_4_1_7_0_0_0() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 long foo(const int a) {};
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct { int a; } a);
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(const int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a);
                long foo(const int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_0_2_6_1_1_1() {
        /* gcc reports:
test.c:6:24: error: conflicting types for 'foo'
                 double foo(struct T b, int c);
                        ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: expected 'struct T' but argument is of type 'int'
                 double foo(struct T b, int c);
                        ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: declared here
                 double foo(struct T b, int c);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(int a);
                double foo(struct T b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_0_3_6_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_9_4_4_7_1_0_1() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(const int a, int c);
                                   ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo(const int a, int c);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                struct { int a; } foo(const int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_9_9_5_8_0_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(volatile int b);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct_anonymous a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct_anonymous a);
                struct S foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_9_8_6_5_1_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(volatile int a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(volatile int a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_9_5_7_2_1_1_1() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(double b, int c);
                           ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo(double b, int c);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                const int foo(double b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_9_4_8_6_1_1_0() {
        /* gcc reports:
test.c:5:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a) {};
                                             ^
test.c:5:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct T b, int c) {};
                                         ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct T b, int c) {};
                              ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct { int a; } a) {};
                                  ^
test.c: In function 'foo':
test.c:6:41: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct T b, int c) {};
                                         ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct { int a; } a) {};
                volatile int foo(struct T b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_6_9_6_0_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct T b) {};
                                  ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct T' but argument is of type 'int'
                 struct_anonymous foo(struct T b) {};
                                  ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct T b) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                struct_anonymous foo(struct T b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_8_10_5_1_0_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(struct S a, int c);
                      ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(volatile int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(volatile int a) {};
                void foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_10_0_0_7_1_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(const int b, int c);
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(int a) {};
                      ^

        */
        error("""
                void foo(int a) {};
                int foo(const int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_10_5_1_4_1_0_1() {
        /* gcc reports:
test.c:4:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a, int c) {};
                                 ^
test.c:4:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct { int a; } a, int c) {};
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct S a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 long foo(struct { int a; } a, int c) {};
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo(struct { int a; } a, int c) {};
                      ^
test.c: In function 'foo':
test.c:4:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct { int a; } a, int c) {};
                                 ^

        */
        error("""
              struct S { int x; int y; };

                void foo(struct S a) {};
                long foo(struct { int a; } a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_10_1_2_4_1_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(long a);
                      ^

        */
        error("""
                void foo(long a);
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_6_3_4_1_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_6_4_8_0_1_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_5_7_1_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(const int a, int c);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(int a);
                struct S foo(const int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_9_6_1_1_0_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 void foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                void foo(struct_anonymous a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_10_9_7_0_0_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int b);
                           ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a) {};
                const int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_1_8_4_1_1_1() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_10_9_9_7_1_1_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(const int b, int c) {};
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(const int b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a) {};
                struct_anonymous foo(const int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_10_9_10_2_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(double b, int c);
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(double b, int c);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a) {};
                void foo(double b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_0_4_6_0_1_1_1() {
        /* gcc reports:
test.c:3:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:3:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct { int a; } a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_7_4_1_0_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(long a) {};
                                   ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(long a) {};
                        ^

        */
        error("""
                int foo(const int a);
                struct { int a; } foo(long a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_0_2_8_2_1_1_0() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_3_3_3_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(int* a, int c);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(int* a, int c);
                      ^

        */
        error("""
                int foo;
                int* foo(int* a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_6_2_4_1_1_1() {
        /* gcc reports:
test.c:4:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } b, int c) {};
                                   ^
test.c:4:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct { int a; } b, int c) {};
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct T a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct <anonymous>' but argument is of type 'int'
                 double foo(struct { int a; } b, int c) {};
                        ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(struct { int a; } b, int c) {};
                        ^
test.c: In function 'foo':
test.c:4:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct { int a; } b, int c) {};
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                double foo(struct { int a; } b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_0_6_0_5_1_1_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct S b, int c);
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S b, int c);
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct S b, int c);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo;
                int foo(struct S b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_6_0_6_0_1_0() {
        correct("""
              struct T { int x; int y; int z; };

                int foo(struct T a);
                int foo(struct T b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_3_8_7_1_1_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(const int b, int c);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                volatile int foo(const int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_0_7_4_8_0_1_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(const int a) {};
                     ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                int foo(const int a) {};
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_1_4_9_0_1_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^

        */
        error("""
                int foo(long a) {};
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_1_1_1_0_1_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(long a);
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo(int a, int c);
                      ^

        */
        error("""
                long foo(long a);
                long foo(int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_1_3_7_1_1_0_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int* a);
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
                long foo(int* a);
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_0_10_2_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_1_9_8_3_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int* a) {};
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int* a) {};
                              ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct_anonymous a) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int* a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a) {};
                volatile int foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_8_9_4_0_0_0() {
        /* gcc reports:
test.c:4:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:4:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct { int a; } a);
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(volatile int a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(volatile int a) {};
                struct_anonymous foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_6_9_5_0_0_1() {
        /* gcc reports:
test.c:8:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct S a);
                                  ^
test.c:7:22: note: previous definition of 'foo' was here
                 long foo(struct T a) {};
                      ^
test.c: In function 'main':
test.c:9:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:8:34: note: expected 'struct S' but argument is of type 'int'
                 struct_anonymous foo(struct S a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                long foo(struct T a) {};
                struct_anonymous foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_1_7_10_6_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^

        */
        error("""
                long foo(const int a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_1_7_2_7_0_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^

        */
        error("""
                long foo(const int a);
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_8_4_8_0_1_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_1_4_9_9_1_1_1() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a) {};
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct { int a; } a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct { int a; } a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_9_5_0_0_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:5:24: note: previous declaration of 'foo' was here
                 double foo(struct_anonymous a);
                        ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                double foo(struct_anonymous a);
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_9_4_1_0_1_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(long b) {};
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(long b) {};
                        ^

        */
        error("""
                double foo;
                struct { int a; } foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_5_1_2_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(double b, int c);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo(double b, int c);
                      ^

        */
        error("""
                double foo;
                long foo(double b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_2_2_4_3_0_1_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int* b) {};
                                   ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(double a) {};
                        ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(int* b) {};
                        ^

        */
        error("""
                double foo(double a) {};
                struct { int a; } foo(int* b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_3_4_4_0_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int* a);
                        ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                double foo(int* a);
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_4_5_5_0_0_1() {
        /* gcc reports:
test.c:3:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a);
                                   ^
test.c:3:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct { int a; } a);
                        ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct { int a; } a);
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_5_10_6_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct T a) {};
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                void foo(struct T a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_9_10_7_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_8_9_8_0_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(volatile int b);
                                  ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo;
                struct_anonymous foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_6_5_9_0_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct_anonymous b) {};
                          ^
test.c:5:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct S foo(struct_anonymous b) {};
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct_anonymous b) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                double foo;
                struct S foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_3_8_1_0_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int a) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int a) {};
                 ^

        */
        error("""
                int* foo;
                long foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_2_0_1_0_1_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(long b);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                int foo(long b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_3_2_3_2_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(double b, int c) {};
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(double a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(double b, int c) {};
                 ^

        */
        error("""
                int* foo(double a) {};
                int* foo(double b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_3_6_3_3_0_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int* a);
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(struct T a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(struct T a) {};
                int* foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_3_8_6_4_1_1_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } b, int c) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(volatile int a) {};
                      ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } b, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(volatile int a) {};
                struct T foo(struct { int a; } b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_5_6_5_0_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 int* foo(struct S a) {};
                      ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int* foo(struct S a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_3_4_3_6_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct T b);
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T b);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo;
                int* foo(struct T b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_3_9_1_7_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(const int b);
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a);
                long foo(const int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_3_7_8_8_0_0_1() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_3_2_5_9_1_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct_anonymous b, int c) {};
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct S foo(struct_anonymous b, int c) {};
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(struct_anonymous b, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct_anonymous b, int c) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int* foo;
                struct S foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_4_0_0_0_1_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo;
                     ^

        */
        error("""
                struct { int a; } foo(int a);
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_4_2_9_1_0_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(double a) {};
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(double a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_5_1_2_0_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(double b);
                      ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct S a);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a);
                long foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_4_5_9_3_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int* a) {};
                                  ^
test.c:5:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct S a) {};
                                   ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int* a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct { int a; } foo(struct S a) {};
                struct_anonymous foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_4_6_4_4_0_0_1() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct T a) {};
                                   ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a) {};
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_4_8_3_5_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(volatile int a) {};
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                struct { int a; } foo(volatile int a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_4_9_4_6_1_0_0() {
        /* gcc reports:
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct T a, int c) {};
                                   ^
test.c:5:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct_anonymous a) {};
                                   ^
test.c: In function 'foo':
test.c:6:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct T a, int c) {};
                                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct { int a; } foo(struct_anonymous a) {};
                struct { int a; } foo(struct T a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_2_1_7_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(const int a, int c);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(double a);
                                   ^

        */
        error("""
                struct { int a; } foo(double a);
                long foo(const int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_4_4_0_8_0_0_1() {
        /* gcc reports:
test.c:1:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a);
                                              ^
test.c:1:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a) {};
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct { int a; } a);
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(volatile int a) {};
                 ^

        */
        error("""
                struct { int a; } foo(struct { int a; } a);
                int foo(volatile int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_4_8_2_9_1_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct_anonymous a, int c) {};
                        ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(volatile int a) {};
                                   ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(volatile int a) {};
                double foo(struct_anonymous a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_5_3_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a);
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(int* a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int* a) {};
                long foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_9_7_1_0_0_1() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(long a);
                           ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(struct_anonymous a);
                const int foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_6_10_2_0_1_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(double b) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct T a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a);
                void foo(double b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_5_8_5_3_0_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int* b);
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                struct S foo(int* b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_5_1_1_4_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(long a);
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(long a);
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_5_8_9_5_0_0_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct S a);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct S' but argument is of type 'int'
                 struct_anonymous foo(struct S a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                struct_anonymous foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_7_8_6_1_0_1() {
        /* gcc reports:
test.c:6:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct T a, int c) {};
                                         ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct T a, int c) {};
                              ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(const int a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: expected 'struct T' but argument is of type 'int'
                 volatile int foo(struct T a, int c) {};
                              ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: declared here
                 volatile int foo(struct T a, int c) {};
                              ^
test.c: In function 'foo':
test.c:6:41: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct T a, int c) {};
                                         ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(const int a);
                volatile int foo(struct T a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_5_2_10_7_1_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(const int b, int c);
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(double a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(const int b, int c);
                      ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(double a) {};
                void foo(const int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_5_9_9_8_0_0_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(volatile int a) {};
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(volatile int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                struct_anonymous foo(volatile int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_0_2_9_0_1_1() {
        /* gcc reports:
test.c:6:24: error: conflicting types for 'foo'
                 double foo(struct_anonymous b) {};
                        ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: expected 'struct_anonymous' but argument is of type 'int'
                 double foo(struct_anonymous b) {};
                        ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(int a);
                double foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_6_2_6_0_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(double a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(double a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_6_7_10_1_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(long b, int c) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(long b, int c) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                void foo(long b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_8_6_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(double a);
                          ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(volatile int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a) {};
                struct T foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_0_0_4_1_1_1() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } b, int c) {};
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } b, int c) {};
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int foo(struct { int a; } b, int c) {};
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct { int a; } b, int c) {};
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct { int a; } b, int c) {};
                                ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                int foo(struct { int a; } b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_6_2_10_5_1_0_0() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct S a, int c);
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                void foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_3_6_6_1_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct T a, int c);
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct T' but argument is of type 'int'
                 struct T foo(struct T a, int c);
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(struct T a, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                struct T foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_9_6_7_1_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct_anonymous a);
                          ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct_anonymous a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_6_4_1_8_1_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_1_3_9_0_1_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 int* foo(struct_anonymous b) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(long a);
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(long a);
                int* foo(struct_anonymous b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_7_3_9_0_0_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int b) {};
                                  ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo;
                struct_anonymous foo(int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_7_3_3_1_1_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(long b, int c);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                int* foo(long b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_0_7_2_1_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(double a, int c) {};
                           ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(int a) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(double a, int c) {};
                 ^

        */
        error("""
                const int foo(int a) {};
                const int foo(double a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_1_9_3_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int* a) {};
                                  ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(long a) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int* a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(long a) {};
                struct_anonymous foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_2_9_4_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting type qualifiers for 'foo'
                 struct_anonymous foo;
                                  ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_7_6_5_5_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct S b);
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S b);
                          ^

        */
        error("""
              struct S { int x; int y; };

                const int foo;
                struct S foo(struct S b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_8_0_6_0_1_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(volatile int a);
                           ^

        */
        error("""
                const int foo(volatile int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_6_9_7_0_0_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(const int a) {};
                                  ^
test.c:5:27: note: previous declaration of 'foo' was here
                 const int foo(struct T a);
                           ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(const int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                const int foo(struct T a);
                struct_anonymous foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_3_1_8_0_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(volatile int b);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                long foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_5_6_9_0_1_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:27: note: previous declaration of 'foo' was here
                 const int foo(struct S a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo(struct S a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_8_4_8_0_1_0_0() {
        /* gcc reports:
test.c:1:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a);
                                         ^
test.c:1:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int a, int c) {};
                              ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct { int a; } a);
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int a, int c) {};
                 ^

        */
        error("""
                volatile int foo(struct { int a; } a);
                volatile int foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_2_8_1_0_1_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(long b) {};
                              ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(long b) {};
                 ^

        */
        error("""
                volatile int foo;
                volatile int foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_1_3_2_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(double a, int c);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                int* foo(double a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_0_6_3_0_0_0() {
        /* gcc reports:
test.c:4:24: warning: function return types not compatible due to 'volatile'
                 struct T foo(int* a);
                        ^
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int* a);
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(int a);
                struct T foo(int* a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_8_0_2_4_0_1_0() {
        /* gcc reports:
test.c:2:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } b) {};
                                   ^
test.c:2:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: warning: function return types not compatible due to 'volatile'
test.c:2:24: error: conflicting types for 'foo'
                 double foo(struct { int a; } b) {};
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^
test.c: In function 'foo':
test.c:2:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct { int a; } b) {};
                                   ^

        */
        error("""
                volatile int foo(int a);
                double foo(struct { int a; } b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_6_8_5_1_1_1() {
        correct("""
                volatile int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_9_4_6_1_0_1() {
        /* gcc reports:
test.c:6:46: warning: function return types not compatible due to 'volatile'
                 struct { int a; } foo(struct T a, int c);
                                              ^
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct T a, int c);
                                   ^
test.c:5:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct_anonymous a);
                              ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:35: note: expected 'struct T' but argument is of type 'int'
                 struct { int a; } foo(struct T a, int c);
                                   ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:35: note: declared here
                 struct { int a; } foo(struct T a, int c);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                volatile int foo(struct_anonymous a);
                struct { int a; } foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_8_6_0_7_0_1_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(const int b) {};
                     ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(const int b) {};
                 ^

        */
        error("""
                volatile int foo;
                int foo(const int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_8_7_2_8_1_1_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(const int a);
                              ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo;
                        ^

        */
        error("""
                volatile int foo(const int a);
                double foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_8_9_6_9_0_0_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct_anonymous a);
                          ^
test.c:5:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                volatile int foo;
                struct T foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_9_5_0_0_1_1_1() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(int b, int c) {};
                     ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct S a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:21: note: declared here
                 int foo(int b, int c) {};
                     ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a) {};
                int foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_6_7_1_0_0_1() {
        /* gcc reports:
test.c:6:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct T a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct T a);
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_9_5_2_2_0_0_0() {
        /* gcc reports:
test.c:6:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct S a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a) {};
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_2_2_3_0_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(int* a);
                        ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                double foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_9_4_4_4_0_0_0() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a);
                                              ^
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct { int a; } a);
                                   ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct { int a; } a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a);
                struct { int a; } foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_5_4_5_0_1_1() {
        /* gcc reports:
test.c:6:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(struct S b) {};
                                   ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:35: note: expected 'struct S' but argument is of type 'int'
                 struct { int a; } foo(struct S b) {};
                                   ^
test.c: In function 'foo':
test.c:6:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct S b) {};
                                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo;
                struct { int a; } foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_2_4_6_0_1_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_1_10_7_0_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(const int b);
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(long a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(long a) {};
                void foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_4_6_8_0_1_1() {
        /* gcc reports:
test.c:5:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:5:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(volatile int b);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct { int a; } a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct { int a; } a);
                struct T foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_9_6_3_9_0_0_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 int* foo(struct_anonymous a) {};
                      ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct T a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 int* foo(struct_anonymous a) {};
                      ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(struct_anonymous a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct T a) {};
                int* foo(struct_anonymous a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_10_0_7_0_0_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int b);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int a);
                      ^

        */
        error("""
                void foo(int a);
                const int foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_10_2_1_1_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(long a, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                long foo(long a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_7_2_2_1_1_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_6_5_3_1_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int* a, int c);
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 void foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                void foo(struct T a);
                struct S foo(int* a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_8_9_4_0_0_1() {
        /* gcc reports:
test.c:4:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:4:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct { int a; } a);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(volatile int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct_anonymous foo(struct { int a; } a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(volatile int a);
                struct_anonymous foo(struct { int a; } a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_10_1_0_5_1_0_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct S a, int c) {};
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S a, int c) {};
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct S a, int c) {};
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct S a, int c) {};
                                ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                int foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_10_0_8_6_1_1_0() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_10_8_8_7_0_1_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(const int b) {};
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(const int b) {};
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(volatile int a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(const int b) {};
                 ^

        */
        error("""
                void foo(volatile int a);
                volatile int foo(const int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_10_6_7_8_0_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_10_1_7_9_1_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous b, int c) {};
                           ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(long a) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(long a) {};
                const int foo(struct_anonymous b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_9_0_4_0_1_0() {
        /* gcc reports:
test.c:4:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } b);
                                ^
test.c:4:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } b);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct_anonymous a) {};
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a) {};
                int foo(struct { int a; } b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_4_10_8_1_0_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(struct { int a; } a);
                     ^

        */
        error("""
                int foo(struct { int a; } a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_1_6_5_2_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(double a) {};
                          ^
test.c:5:22: note: previous definition of 'foo' was here
                 long foo(struct T a) {};
                      ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(double a) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                long foo(struct T a) {};
                struct S foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_1_0_7_9_1_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous a, int c) {};
                           ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(int a) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(int a) {};
                const int foo(struct_anonymous a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_5_0_6_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo;
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_4_5_3_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int* a, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                struct S foo(int* a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_3_4_1_0_0_0_0() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a) {};
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int a) {};
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(struct { int a; } a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int a) {};
                 ^

        */
        error("""
                int* foo(struct { int a; } a) {};
                long foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_9_10_0_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_4_2_1_8_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(volatile int a) {};
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(volatile int a) {};
                 ^

        */
        error("""
                struct { int a; } foo;
                long foo(volatile int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_4_5_7_2_1_0_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(double a, int c);
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo(double a, int c);
                           ^

        */
        error("""
                struct { int a; } foo;
                const int foo(double a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_5_0_7_3_0_0_1() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int a);
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_5_5_4_0_1_1_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int b, int c);
                                   ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(struct S a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo(int b, int c);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct S a) {};
                struct { int a; } foo(int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_6_1_2_6_0_1_0() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct T b);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                double foo(struct T b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_8_10_5_1_1_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(struct S b, int c) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(volatile int a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct S' but argument is of type 'int'
                 void foo(struct S b, int c) {};
                      ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 void foo(struct S b, int c) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(volatile int a);
                void foo(struct S b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_7_6_6_7_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct T a) {};
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(struct T a) {};
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_7_0_6_5_1_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct S a, int c) {};
                          ^
test.c:5:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct S' but argument is of type 'int'
                 struct T foo(struct S a, int c) {};
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(struct S a, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct S a, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo;
                struct T foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_8_5_9_0_0_0_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:30: note: previous definition of 'foo' was here
                 volatile int foo(struct S a) {};
                              ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                volatile int foo(struct S a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_8_8_9_5_1_1_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct S b, int c);
                                  ^
test.c:5:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                volatile int foo;
                struct_anonymous foo(struct S b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_9_7_10_5_0_1_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(struct S b) {};
                      ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(const int a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct S' but argument is of type 'int'
                 void foo(struct S b) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(const int a) {};
                void foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_9_5_8_8_1_0_0() {
        /* gcc reports:
test.c:6:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(volatile int a, int c) {};
                 ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(volatile int a, int c) {};
                              ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct S a);
                                  ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(volatile int a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a);
                volatile int foo(volatile int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_10_8_6_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(double a) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(volatile int a) {};
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(double a) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(volatile int a) {};
                struct T foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_6_7_0_1_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_0_6_9_1_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct_anonymous a, int c) {};
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct_anonymous a, int c) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo(struct_anonymous a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_1_7_5_0_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_8_5_7_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(const int a);
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(volatile int a) {};
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo(volatile int a) {};
                struct S foo(const int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_3_5_4_0_1_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } b) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int* a);
                      ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct { int a; } b) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                long foo(int* a);
                struct S foo(struct { int a; } b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_6_3_8_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_3_7_9_0_1_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous b) {};
                           ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int* a);
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct_anonymous' but argument is of type 'int'
                 const int foo(struct_anonymous b) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(int* a);
                const int foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_3_4_3_3_1_0_1() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a);
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int* a, int c) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(struct { int a; } a);
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(int* a, int c) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(int* a, int c) {};
                 ^

        */
        error("""
                int* foo(struct { int a; } a);
                int* foo(int* a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_3_7_7_3_0_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_1_2_3_0_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(long a);
                                   ^

        */
        error("""
                struct { int a; } foo(long a);
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_3_7_2_0_1_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int* a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
                struct { int a; } foo(int* a);
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_5_3_10_2_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(int* a);
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(int* a);
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_5_8_7_2_0_1_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(double b) {};
                           ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(volatile int a) {};
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(double b) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(volatile int a) {};
                const int foo(double b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_6_1_10_7_0_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(const int a) {};
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(long a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(long a) {};
                void foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_6_4_0_9_1_1_1() {
        /* gcc reports:
test.c:5:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a);
                                     ^
test.c:5:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct { int a; } a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:21: note: expected 'struct_anonymous' but argument is of type 'int'
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:21: note: declared here
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct { int a; } a);
                int foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_7_9_10_6_0_0_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 void foo(struct T a);
                      ^
test.c:5:27: note: previous declaration of 'foo' was here
                 const int foo(struct_anonymous a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                const int foo(struct_anonymous a);
                void foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_1_9_7_1_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(const int b, int c);
                                  ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(long a) {};
                           ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo(const int b, int c);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(long a) {};
                struct_anonymous foo(const int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_8_5_1_9_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct S a);
                              ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct S a);
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_8_6_2_1_0_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 double foo(long b);
                 ^
test.c:4:24: error: conflicting types for 'foo'
                 double foo(long b);
                        ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct T a) {};
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct T a) {};
                double foo(long b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_9_10_3_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(int* a, int c);
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(int* a, int c);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                void foo(int* a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_7_9_4_0_1_1() {
        /* gcc reports:
test.c:4:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } b);
                                             ^
test.c:4:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct { int a; } b);
                                  ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(const int a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct_anonymous foo(struct { int a; } b);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a) {};
                struct_anonymous foo(struct { int a; } b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_10_3_2_5_0_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct S a);
                        ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct S' but argument is of type 'int'
                 double foo(struct S a);
                        ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                double foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_10_3_10_1_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(long b) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(int* a);
                      ^

        */
        error("""
                void foo(int* a);
                void foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_8_1_3_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_7_2_0_0_0_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int a) {};
                        ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(const int a) {};
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int a) {};
                 ^

        */
        error("""
                int foo(const int a) {};
                double foo(int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_1_7_6_1_1_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(long a, int c) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(const int a) {};
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(long a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(const int a) {};
                struct T foo(long a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_1_5_4_7_1_1_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(const int b, int c);
                                   ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct S a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo(const int b, int c);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                long foo(struct S a) {};
                struct { int a; } foo(const int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_2_1_0_4_0_0_0() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } a);
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(long a);
                        ^

        */
        error("""
                double foo(long a);
                int foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_2_6_6_2_1_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct T a);
                        ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(struct T a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_3_6_3_3_0_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(int* b) {};
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct T a);
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(int* b) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(struct T a);
                int* foo(int* b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_5_5_1_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(long b);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo;
                struct S foo(long b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_4_5_10_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a);
                      ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct S a);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a);
                void foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_1_10_4_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(long a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo;
                      ^

        */
        error("""
                struct { int a; } foo(long a);
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_5_4_3_9_1_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_3_9_3_0_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int* b);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                struct_anonymous foo(int* b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_5_6_5_0_1_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct S a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_5_1_7_0_0_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 long foo(const int a) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct S a);
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(const int a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a);
                long foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_2_1_3_0_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int* b);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                long foo(int* b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_7_0_1_8_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(int a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo;
                      ^

        */
        error("""
                const int foo(int a) {};
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_8_4_7_5_1_1_0() {
        /* gcc reports:
test.c:3:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a) {};
                                         ^
test.c:3:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:38: warning: function return types not compatible due to 'volatile'
                 const int foo(struct S b, int c);
                                      ^
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct S b, int c);
                           ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct { int a; } a) {};
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct { int a; } a) {};
                const int foo(struct S b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_8_4_5_5_0_1_1() {
        /* gcc reports:
test.c:3:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a) {};
                                         ^
test.c:3:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:37: warning: function return types not compatible due to 'volatile'
                 struct S foo(struct S b);
                                     ^
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct S b);
                          ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct { int a; } a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S b);
                          ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct { int a; } a) {};
                struct S foo(struct S b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_0_8_6_0_0_0() {
        /* gcc reports:
test.c:4:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_2_4_4_1_0_1() {
        /* gcc reports:
test.c:4:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a, int c);
                                              ^
test.c:4:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct { int a; } a, int c);
                                   ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(double a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct { int a; } foo(struct { int a; } a, int c);
                                   ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo(struct { int a; } a, int c);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(double a) {};
                struct { int a; } foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_10_5_10_1_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(struct S a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_10_2_5_2_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(double b) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(double a) {};
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(double b) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                void foo(double a) {};
                struct S foo(double b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_0_0_8_0_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_0_1_6_1_0_1() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct T a, int c) {};
                      ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct T' but argument is of type 'int'
                 long foo(struct T a, int c) {};
                      ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 long foo(struct T a, int c) {};
                      ^
test.c: In function 'foo':
test.c:6:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct T a, int c) {};
                                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                long foo(struct T a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_7_0_2_6_1_1_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct T b, int c);
                        ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(int a) {};
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct T' but argument is of type 'int'
                 double foo(struct T b, int c);
                        ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(struct T b, int c);
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(int a) {};
                double foo(struct T b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_0_3_7_1_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(const int b, int c);
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a) {};
                int* foo(const int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_0_4_3_1_1_0() {
        /* gcc reports:
test.c:2:35: error: conflicting type qualifiers for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_0_5_0_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int b, int c) {};
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(int b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int b, int c) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(int a);
                struct S foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_0_6_2_1_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(double b, int c) {};
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(double b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(double b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo(double b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_4_0_7_5_0_0_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct S a) {};
                           ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct S' but argument is of type 'int'
                 const int foo(struct S a) {};
                           ^
test.c: In function 'foo':
test.c:4:38: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct S a) {};
                                      ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(int a);
                const int foo(struct S a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_0_8_7_0_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(const int b);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(const int b);
                              ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a) {};
                volatile int foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_0_9_6_1_0_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(int a);
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_1_0_10_9_0_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct_anonymous b);
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(int a);
                void foo(struct_anonymous b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_1_0_0_0_1_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int b) {};
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(long a);
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int b) {};
                 ^

        */
        error("""
                double foo(long a);
                int foo(int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_3_1_1_5_1_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(long a);
                      ^

        */
        error("""
                int* foo(long a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_1_2_6_1_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_9_1_3_8_0_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(volatile int b) {};
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(long a);
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(volatile int b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(long a);
                int* foo(volatile int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_1_4_2_1_0_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_1_5_4_1_1_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b, int c);
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } b, int c);
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(long a);
                          ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct S foo(struct { int a; } b, int c);
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct { int a; } b, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(long a);
                struct S foo(struct { int a; } b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_9_1_6_7_0_1_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(const int b);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                struct T foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_4_1_7_9_1_1_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(struct_anonymous b, int c) {};
                           ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo;
                const int foo(struct_anonymous b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_5_1_8_3_0_0_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int* a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int* a);
                              ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(long a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(long a) {};
                volatile int foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_3_1_9_1_0_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(long a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(long a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_1_10_8_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(volatile int b) {};
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(long a);
                           ^

        */
        error("""
                const int foo(long a);
                void foo(volatile int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_0_2_0_8_1_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(double a) {};
                     ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo;
                     ^

        */
        error("""
                int foo(double a) {};
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_5_2_1_3_1_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int* b, int c);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                long foo(int* b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_2_2_7_0_1_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(const int b);
                        ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                double foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_9_2_3_5_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(double a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(double a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_4_2_4_9_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct_anonymous a);
                                   ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(double a);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(double a);
                struct { int a; } foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_2_5_0_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int b, int c) {};
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(double a);
                           ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(int b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int b, int c) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(double a);
                struct S foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_1_2_6_5_1_0_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct S a, int c) {};
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct S a, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                long foo;
                struct T foo(struct S a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_2_7_0_1_1_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(int b, int c) {};
                           ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo(int b, int c) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int b, int c) {};
                 ^

        */
        error("""
                volatile int foo;
                const int foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_2_8_3_1_1_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int* b, int c) {};
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int* b, int c) {};
                              ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(double a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:30: note: declared here
                 volatile int foo(int* b, int c) {};
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int* b, int c) {};
                 ^

        */
        error("""
                const int foo(double a) {};
                volatile int foo(int* b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_2_9_4_1_1_0() {
        /* gcc reports:
test.c:4:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } b, int c);
                                             ^
test.c:4:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct { int a; } b, int c);
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(double a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(double a);
                struct_anonymous foo(struct { int a; } b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_2_2_10_5_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct S b) {};
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 void foo(struct S b) {};
                      ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                void foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_6_3_0_2_0_0_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(double a) {};
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(double a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                int foo(double a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_8_3_1_3_1_1_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 long foo(int* b, int c) {};
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int* b, int c) {};
                      ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(int* a) {};
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int* b, int c) {};
                 ^

        */
        error("""
                volatile int foo(int* a) {};
                long foo(int* b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_3_2_3_0_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(int* a) {};
                        ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int* a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                double foo(int* a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_4_3_3_9_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_1_3_4_9_1_1_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(int* a);
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                long foo(int* a);
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_2_3_5_5_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct S b, int c) {};
                          ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(int* a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S b, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct S b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct S b, int c) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int* a) {};
                struct S foo(struct S b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_9_3_6_6_0_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct T b) {};
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct T b) {};
                                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(int* a);
                struct T foo(struct T b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_3_7_2_0_1_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(double b);
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
                int foo(int* a);
                const int foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_6_3_8_9_0_0_0() {
        /* gcc reports:
test.c:6:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous a) {};
                 ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous a) {};
                              ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(int* a) {};
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(int* a) {};
                volatile int foo(struct_anonymous a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_9_3_9_1_1_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(long b, int c) {};
                                  ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo(long b, int c) {};
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(long b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int* a);
                struct_anonymous foo(long b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_9_3_10_1_0_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(long a) {};
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int* a);
                void foo(long a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_9_4_0_6_1_0_0() {
        /* gcc reports:
test.c:6:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct T a, int c);
                     ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                int foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_4_1_3_1_1_0() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int* b, int c);
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct { int a; } a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a);
                long foo(int* b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_6_4_2_9_0_1_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_6_4_3_2_1_0_0() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a) {};
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(double a, int c);
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(struct { int a; } a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(struct { int a; } a) {};
                int* foo(double a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_5_4_4_8_1_0_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_1_4_5_9_1_0_0() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a);
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct { int a; } a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo(struct { int a; } a);
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_1_4_6_7_0_1_0() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a) {};
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct { int a; } a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(struct { int a; } a) {};
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_4_7_9_1_1_1() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a) {};
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(struct { int a; } a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
                int* foo(struct { int a; } a) {};
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_8_4_8_4_1_1_1() {
        correct("""
                volatile int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_4_4_9_7_0_1_1() {
        /* gcc reports:
test.c:3:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a);
                                              ^
test.c:3:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(const int b) {};
                                  ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct { int a; } a);
                                   ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(const int b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(struct { int a; } a);
                struct_anonymous foo(const int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_4_4_10_9_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct_anonymous b, int c) {};
                      ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 void foo(struct_anonymous b, int c) {};
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(struct_anonymous b, int c) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo;
                void foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_0_5_0_5_1_1_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo;
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_5_1_6_1_0_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 long foo(struct T a, int c);
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct S a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct S a);
                long foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_9_5_2_9_1_1_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_5_3_4_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct S a);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_5_4_2_0_0_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double a);
                                   ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct S a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(struct S a);
                struct { int a; } foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_5_5_1_0_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo;
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_2_5_6_1_0_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:24: note: previous definition of 'foo' was here
                 double foo(struct S a) {};
                        ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                double foo(struct S a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_5_5_7_7_1_1_1() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(struct S a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct S a) {};
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_3_5_8_3_1_0_0() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_5_9_2_1_1_0() {
        /* gcc reports:
test.c:8:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:7:26: note: previous declaration of 'foo' was here
                 struct T foo(struct S a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_5_10_6_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct T b) {};
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo;
                void foo(struct T b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_2_6_0_5_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct T a);
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(struct T a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_6_1_7_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(const int b) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(const int b) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                long foo(const int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_6_2_5_1_0_1() {
        /* gcc reports:
test.c:6:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct S a, int c) {};
                        ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: expected 'struct S' but argument is of type 'int'
                 double foo(struct S a, int c) {};
                        ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: declared here
                 double foo(struct S a, int c) {};
                        ^
test.c: In function 'foo':
test.c:6:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct S a, int c) {};
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                double foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_8_6_3_6_0_0_1() {
        /* gcc reports:
test.c:4:33: warning: function return types not compatible due to 'volatile'
                 int* foo(struct T a);
                                 ^
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct T a);
                      ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct T a);
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct T a);
                int* foo(struct T a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_6_4_8_0_1_0() {
        /* gcc reports:
test.c:6:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct T a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct T a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_6_5_0_1_1_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int b, int c) {};
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct T a);
                          ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(int b, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct T a);
                struct S foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_6_6_0_1_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(int b, int c) {};
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct T a);
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a);
                struct T foo(int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_6_7_2_0_1_0() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(double b);
                           ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct T a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a);
                const int foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_7_6_8_3_1_0_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(int* a, int c) {};
                              ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int* a, int c) {};
                 ^

        */
        error("""
                const int foo;
                volatile int foo(int* a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_4_6_9_1_1_0_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct T a) {};
                                   ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_4_6_10_4_0_0_1() {
        /* gcc reports:
test.c:4:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a) {};
                                 ^
test.c:4:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } a) {};
                      ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct T a) {};
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 void foo(struct { int a; } a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a) {};
                void foo(struct { int a; } a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_4_7_0_1_0_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long a);
                     ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(const int a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(const int a) {};
                int foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_2_7_1_1_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(long b) {};
                      ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(const int a) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(long b) {};
                 ^

        */
        error("""
                double foo(const int a) {};
                long foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_7_2_1_1_0_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(const int a) {};
                        ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo;
                        ^

        */
        error("""
                double foo(const int a) {};
                double foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_1_7_3_6_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct T b);
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 int* foo(struct T b);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(const int a);
                int* foo(struct T b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_7_7_4_3_0_1_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(const int a) {};
                           ^

        */
        error("""
                const int foo(const int a) {};
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_7_5_9_1_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_7_6_5_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting type qualifiers for 'foo'
                 struct T foo;
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_7_7_5_1_0_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(const int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a);
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_7_8_7_1_0_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(const int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a);
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_7_9_0_1_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int b, int c);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo;
                struct_anonymous foo(int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_3_7_10_2_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(double a, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(double a, int c);
                      ^

        */
        error("""
                int* foo;
                void foo(double a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_9_8_0_8_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(volatile int a);
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_8_1_7_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(const int b);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(volatile int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(volatile int a);
                long foo(const int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_3_8_2_3_0_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int* b) {};
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(volatile int a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int* b) {};
                 ^

        */
        error("""
                int* foo(volatile int a);
                double foo(int* b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_8_8_3_0_1_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 int* foo(int a, int c) {};
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int a, int c) {};
                      ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(volatile int a) {};
                              ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(int a, int c) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(int a, int c) {};
                 ^

        */
        error("""
                volatile int foo(volatile int a) {};
                int* foo(int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_1_8_4_0_0_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(volatile int a);
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                long foo(volatile int a);
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_8_5_6_1_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(volatile int a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(volatile int a);
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_9_8_6_6_0_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(volatile int a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(volatile int a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_8_8_7_5_0_0_1() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(struct S a);
                           ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct S' but argument is of type 'int'
                 const int foo(struct S a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo;
                const int foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_10_8_8_1_0_1_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long b) {};
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(long b) {};
                              ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(volatile int a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(long b) {};
                 ^

        */
        error("""
                void foo(volatile int a) {};
                volatile int foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_8_9_1_1_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(long a, int c);
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(volatile int a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(volatile int a);
                struct_anonymous foo(long a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_8_10_9_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct_anonymous a);
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 void foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo;
                void foo(struct_anonymous a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_1_9_0_9_1_1_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct_anonymous' but argument is of type 'int'
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo;
                int foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_8_9_1_0_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct_anonymous a);
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(struct_anonymous a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_9_2_0_1_1_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int b, int c) {};
                        ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct_anonymous a);
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a);
                double foo(int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_9_3_6_0_0_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 int* foo(struct T a);
                      ^
test.c:5:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct_anonymous a);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct { int a; } foo(struct_anonymous a);
                int* foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_3_9_4_1_1_0_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_1_9_5_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(double a) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(double a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                long foo;
                struct S foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_9_6_3_0_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(int* a) {};
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 long foo(struct_anonymous a);
                      ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int* a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                long foo(struct_anonymous a);
                struct T foo(int* a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_9_7_1_0_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(long b) {};
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(long b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                const int foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_9_8_0_1_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int a, int c) {};
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int a, int c) {};
                              ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct_anonymous a);
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a);
                volatile int foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_7_9_9_7_1_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct_anonymous a) {};
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_9_10_6_0_1_1() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct T b);
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct T' but argument is of type 'int'
                 void foo(struct T b);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo;
                void foo(struct T b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_0_9_0_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a) {};
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(int a);
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(int a);
                struct_anonymous foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_4_0_0_1_1_0_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(int a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_0_6_2_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(int a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_1_0_1_3_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int* a) {};
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(int a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int* a) {};
                 ^

        */
        error("""
                long foo(int a) {};
                long foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_0_3_4_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(int a) {};
                      ^

        */
        error("""
                void foo(int a) {};
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_0_10_5_0_1_0() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct S b) {};
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                void foo(struct S b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_0_5_6_0_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct T b) {};
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 long foo(int a);
                      ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct T b) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                long foo(int a);
                struct S foo(struct T b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_8_0_0_7_0_1_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(int a) {};
                              ^

        */
        error("""
                volatile int foo(int a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_4_0_4_8_0_1_1() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(volatile int b) {};
                                   ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(volatile int b) {};
                        ^

        */
        error("""
                struct { int a; } foo(int a) {};
                struct { int a; } foo(volatile int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_2_0_1_9_1_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct_anonymous b, int c);
                      ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(int a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(int a) {};
                long foo(struct_anonymous b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_1_6_0_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int b);
                          ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(long a) {};
                struct T foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_1_1_5_1_0_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(long a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                long foo(long a) {};
                struct S foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_1_6_2_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_1_2_3_1_1_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_1_1_1_4_0_1_1() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } b) {};
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct { int a; } b) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 long foo(struct { int a; } b) {};
                      ^
test.c: In function 'foo':
test.c:2:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct { int a; } b) {};
                                 ^

        */
        error("""
                long foo;
                long foo(struct { int a; } b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_1_5_5_1_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct S a, int c) {};
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(long a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S a, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct S a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct S a, int c) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(long a);
                struct S foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_1_4_6_0_0_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(long a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(long a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_4_1_4_7_1_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(const int a, int c);
                                   ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo(const int a, int c);
                                   ^

        */
        error("""
                struct { int a; } foo;
                struct { int a; } foo(const int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_1_1_1_8_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(volatile int a, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(long a);
                      ^

        */
        error("""
                long foo(long a);
                long foo(volatile int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_7_1_0_9_1_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct_anonymous a, int c) {};
                     ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo;
                int foo(struct_anonymous a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_2_8_0_0_1_1() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(int b) {};
                              ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(int b) {};
                 ^

        */
        error("""
                volatile int foo;
                volatile int foo(int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_3_2_1_1_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_2_2_9_2_0_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(double a);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(double a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_2_0_3_1_1_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(int* b, int c);
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                int foo(int* b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_2_6_4_0_0_1() {
        /* gcc reports:
test.c:6:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a) {};
                                     ^
test.c:6:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct { int a; } a) {};
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } a) {};
                          ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } a) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo;
                struct T foo(struct { int a; } a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_7_2_2_5_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct S a);
                        ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(double a) {};
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(double a) {};
                double foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_2_9_6_0_0_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_5_2_10_7_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(double a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(double a) {};
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_4_2_2_8_0_0_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(volatile int a);
                        ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(double a) {};
                                   ^

        */
        error("""
                struct { int a; } foo(double a) {};
                double foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_0_2_0_9_0_1_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous b);
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(double a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct_anonymous' but argument is of type 'int'
                 int foo(struct_anonymous b);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(double a) {};
                int foo(struct_anonymous b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_8_3_9_0_1_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(int* a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(int* a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_6_3_7_1_0_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_3_0_2_0_1_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(double b);
                     ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int foo(double b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_3_3_1_3_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int* b) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(int* a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int* b) {};
                 ^

        */
        error("""
                int* foo(int* a);
                long foo(int* b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_10_3_3_4_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_3_0_5_1_0_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct S a, int c) {};
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S a, int c) {};
                     ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(struct S a, int c) {};
                     ^
test.c: In function 'foo':
test.c:4:32: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct S a, int c) {};
                                ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                int foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_3_7_6_0_0_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(struct T a);
                           ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo;
                const int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_7_3_2_7_0_1_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(const int b);
                        ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                double foo(const int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_3_3_10_8_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(volatile int b);
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(int* a) {};
                      ^

        */
        error("""
                int* foo(int* a) {};
                void foo(volatile int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_5_3_8_9_0_1_1() {
        /* gcc reports:
test.c:6:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous b) {};
                 ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous b) {};
                              ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(int* a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:30: note: expected 'struct_anonymous' but argument is of type 'int'
                 volatile int foo(struct_anonymous b) {};
                              ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(int* a);
                volatile int foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_7_4_6_0_0_0_0() {
        /* gcc reports:
test.c:3:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } a) {};
                                      ^
test.c:3:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int a);
                          ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct { int a; } a) {};
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(struct { int a; } a) {};
                struct T foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_4_4_3_1_0_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(long b) {};
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(long b) {};
                 ^

        */
        error("""
                struct { int a; } foo;
                int* foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_5_4_1_2_0_1_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_4_0_3_0_1_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: conflicting types for 'foo'
                 int foo(int* b) {};
                     ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int* b) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                int foo(int* b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_1_4_6_4_0_1_1() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } a) {};
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct { int a; } a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(struct { int a; } a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_3_4_6_5_1_0_0() {
        /* gcc reports:
test.c:5:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a);
                                 ^
test.c:5:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct S a, int c);
                          ^
test.c:5:22: note: previous declaration of 'foo' was here
                 int* foo(struct { int a; } a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int* foo(struct { int a; } a);
                struct T foo(struct S a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_4_5_6_1_0_0() {
        /* gcc reports:
test.c:5:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:5:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct { int a; } a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct { int a; } a);
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_4_4_7_7_1_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(const int a, int c) {};
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(const int a, int c) {};
                 ^

        */
        error("""
                struct { int a; } foo;
                const int foo(const int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_4_6_8_0_1_1() {
        /* gcc reports:
test.c:3:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a);
                                         ^
test.c:3:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:24: warning: function return types not compatible due to 'volatile'
                 struct T foo(volatile int b);
                        ^
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(volatile int b);
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct { int a; } a);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct { int a; } a);
                struct T foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_4_4_9_1_1_1() {
        /* gcc reports:
test.c:5:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a);
                                     ^
test.c:5:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct_anonymous b, int c);
                                   ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct { int a; } a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:35: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct { int a; } foo(struct_anonymous b, int c);
                                   ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:35: note: declared here
                 struct { int a; } foo(struct_anonymous b, int c);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct { int a; } a);
                struct { int a; } foo(struct_anonymous b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_4_5_8_0_0_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int b);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(int b);
                              ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct S a) {};
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a) {};
                volatile int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_3_5_8_1_1_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long b, int c) {};
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(long b, int c) {};
                              ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct S a);
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(long b, int c) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(struct S a);
                volatile int foo(long b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_8_5_1_2_1_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 long foo(double b, int c) {};
                 ^
test.c:4:22: error: conflicting types for 'foo'
                 long foo(double b, int c) {};
                      ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct S a) {};
                              ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(double b, int c) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct S a) {};
                long foo(double b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_5_5_3_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int* b, int c) {};
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(struct S a);
                        ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(int* b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int* b, int c) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct S a);
                struct S foo(int* b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_5_7_4_0_0_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct S a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(struct S a);
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_5_8_5_0_1_1() {
        /* gcc reports:
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct S b) {};
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct S b) {};
                              ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct S a) {};
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct S' but argument is of type 'int'
                 volatile int foo(struct S b) {};
                              ^
test.c: In function 'foo':
test.c:4:41: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct S b) {};
                                         ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(struct S a) {};
                volatile int foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_9_5_9_6_1_1_0() {
        /* gcc reports:
test.c:8:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct T b, int c) {};
                                  ^
test.c:7:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct S a);
                                  ^
test.c: In function 'foo':
test.c:8:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct T b, int c) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct_anonymous foo(struct S a);
                struct_anonymous foo(struct T b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_8_5_10_7_0_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct S a);
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct S a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_2_5_8_8_0_1_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct S a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct S a) {};
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_5_8_9_1_0_1() {
        /* gcc reports:
test.c:8:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous a, int c) {};
                 ^
test.c:8:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous a, int c) {};
                              ^
test.c:7:26: note: previous declaration of 'foo' was here
                 struct T foo(struct S a);
                          ^
test.c: In function 'main':
test.c:9:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:8:30: note: expected 'struct_anonymous' but argument is of type 'int'
                 volatile int foo(struct_anonymous a, int c) {};
                              ^
test.c:9:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:8:30: note: declared here
                 volatile int foo(struct_anonymous a, int c) {};
                              ^
test.c: In function 'foo':
test.c:8:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a);
                volatile int foo(struct_anonymous a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_6_5_0_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int b);
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo;
                struct S foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_3_6_8_1_1_0_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(long a, int c);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                volatile int foo(long a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_6_8_2_0_0_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(double a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(double a);
                              ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct T a);
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a);
                volatile int foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_10_6_10_3_1_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(int* b, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                void foo(int* b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_4_6_0_4_0_0_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct T a) {};
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a) {};
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_6_4_5_1_1_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(struct S b, int c) {};
                                   ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'foo':
test.c:4:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct S b, int c) {};
                                              ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                struct { int a; } foo(struct S b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_6_9_6_1_1_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct T b, int c) {};
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct T a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct T' but argument is of type 'int'
                 struct_anonymous foo(struct T b, int c) {};
                                  ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo(struct T b, int c) {};
                                  ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct T b, int c) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct T a);
                struct_anonymous foo(struct T b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_10_6_9_7_1_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:22: note: previous definition of 'foo' was here
                 void foo(struct T a) {};
                      ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                void foo(struct T a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_6_5_8_1_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a, int c);
                          ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(struct T a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(volatile int a, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct T a) {};
                struct S foo(volatile int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_6_8_9_0_1_1() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct_anonymous b) {};
                              ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct_anonymous' but argument is of type 'int'
                 volatile int foo(struct_anonymous b) {};
                              ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo;
                volatile int foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_8_7_9_0_1_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(const int a) {};
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(const int a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_4_7_1_1_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(long b);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(const int a);
                                   ^

        */
        error("""
                struct { int a; } foo(const int a);
                long foo(long b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_7_3_2_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(double a);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                int* foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_9_7_9_3_0_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int* b);
                                  ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(const int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a);
                struct_anonymous foo(int* b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_5_7_8_4_0_0_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(const int a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(const int a) {};
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_7_9_5_0_0_1() {
        /* gcc reports:
test.c:8:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct S a);
                                  ^
test.c:7:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:9:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:8:34: note: expected 'struct S' but argument is of type 'int'
                 struct_anonymous foo(struct S a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                struct_anonymous foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_7_3_6_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(const int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_3_7_0_7_1_1_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(const int a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo;
                     ^

        */
        error("""
                int* foo(const int a) {};
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_9_7_1_8_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(volatile int b);
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(const int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a) {};
                long foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_3_7_1_9_0_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(const int a) {};
                      ^

        */
        error("""
                int* foo(const int a) {};
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_9_8_10_0_1_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(int a, int c) {};
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(volatile int a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(int a, int c) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(volatile int a) {};
                void foo(int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_8_2_1_0_0_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(volatile int a);
                        ^

        */
        error("""
                double foo(volatile int a);
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_8_3_2_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(double a, int c) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(volatile int a);
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(double a, int c) {};
                 ^

        */
        error("""
                long foo(volatile int a);
                int* foo(double a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_4_8_6_3_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_8_2_4_0_1_0() {
        /* gcc reports:
test.c:4:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } b);
                                   ^
test.c:4:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct { int a; } b);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                double foo(struct { int a; } b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_2_8_9_5_0_1_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct S b) {};
                                  ^
test.c:5:24: note: previous definition of 'foo' was here
                 double foo(volatile int a) {};
                        ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct S b) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                double foo(volatile int a) {};
                struct_anonymous foo(struct S b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_7_8_6_6_0_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(volatile int a);
                           ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(volatile int a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_1_8_1_7_0_0_1() {
        /* gcc reports:
test.c:2:22: error: redefinition of 'foo'
                 long foo(const int a) {};
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(volatile int a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(const int a) {};
                 ^

        */
        error("""
                long foo(volatile int a) {};
                long foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_8_3_8_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(volatile int a) {};
                        ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                double foo(volatile int a) {};
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_5_8_1_9_1_1_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 long foo(struct_anonymous b, int c) {};
                      ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(volatile int a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 long foo(struct_anonymous b, int c) {};
                      ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 long foo(struct_anonymous b, int c) {};
                      ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(volatile int a) {};
                long foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_1_9_9_0_1_0_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int a, int c) {};
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo;
                struct_anonymous foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_9_0_1_0_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a) {};
                     ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct_anonymous a) {};
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(long a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a) {};
                int foo(long a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_8_9_2_2_1_1_0() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(double b, int c) {};
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(double b, int c) {};
                 ^

        */
        error("""
                volatile int foo;
                double foo(double b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_5_9_5_4_0_1_0() {
        /* gcc reports:
test.c:6:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b);
                                     ^
test.c:6:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } b);
                          ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(struct_anonymous a) {};
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(struct_anonymous a) {};
                struct S foo(struct { int a; } b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_9_10_5_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_9_3_6_1_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(struct T b, int c);
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                int* foo(struct T b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_4_9_2_7_0_0_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(const int a) {};
                        ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct_anonymous a);
                                   ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(const int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(struct_anonymous a);
                double foo(const int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_9_7_8_0_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(volatile int a);
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                const int foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_9_0_9_1_1_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a) {};
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_3_0_10_4_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_0_10_4_1_1_0() {
        /* gcc reports:
test.c:2:22: error: storage size of 'foo' isn't known
                 void foo;
                      ^

        */
        error("""
                void foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_7_1_1_6_0_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct T a) {};
                      ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(long a);
                           ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 long foo(struct T a) {};
                      ^
test.c: In function 'foo':
test.c:4:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct T a) {};
                                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(long a);
                long foo(struct T a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_1_1_6_6_1_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(long a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(long a) {};
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_10_2_1_7_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(const int a);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(double a);
                      ^

        */
        error("""
                void foo(double a);
                long foo(const int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_2_2_7_0_1_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a, int c) {};
                           ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(double a);
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int a, int c) {};
                 ^

        */
        error("""
                double foo(double a);
                const int foo(int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_8_3_10_9_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 void foo(struct_anonymous a) {};
                 ^
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct_anonymous a) {};
                      ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(int* a) {};
                              ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(int* a) {};
                void foo(struct_anonymous a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_3_10_0_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(int a, int c);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                void foo(int a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_4_0_5_0_0_1() {
        /* gcc reports:
test.c:3:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a);
                                         ^
test.c:3:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:32: warning: function return types not compatible due to 'volatile'
                 int foo(struct S a);
                                ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct { int a; } a);
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct { int a; } a);
                int foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_7_4_4_4_1_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting type qualifiers for 'foo'
                 struct { int a; } foo;
                                   ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_5_8_8_0_1_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct S a);
                                   ^

        */
        error("""
              struct S { int x; int y; };

                struct { int a; } foo(struct S a);
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_6_5_1_3_1_0_1() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 long foo(int* a, int c) {};
                      ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(struct S a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 long foo(int* a, int c) {};
                      ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int* a, int c) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a) {};
                long foo(int* a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_6_9_2_0_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(double a) {};
                                  ^
test.c:5:27: note: previous definition of 'foo' was here
                 const int foo(struct T a) {};
                           ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(double a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                const int foo(struct T a) {};
                struct_anonymous foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_2_6_5_0_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo;
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_4_7_0_1_0_1_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo;
                     ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_7_10_2_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(double b, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(double b, int c);
                      ^

        */
        error("""
                void foo;
                void foo(double b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_5_8_5_1_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(long a) {};
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(long a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                struct S foo(long a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_8_0_1_1_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long b, int c);
                     ^
test.c:1:24: note: previous definition of 'foo' was here
                 double foo(volatile int a) {};
                        ^

        */
        error("""
                double foo(volatile int a) {};
                int foo(long b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_9_3_8_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(volatile int a) {};
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(volatile int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                int* foo(volatile int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_8_9_7_0_1_1_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 const int foo(int b, int c) {};
                 ^
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int b, int c) {};
                           ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct_anonymous a);
                              ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo(int b, int c) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(struct_anonymous a);
                const int foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_0_0_7_3_1_0_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(int* a, int c) {};
                           ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo(int* a, int c) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int* a, int c) {};
                 ^

        */
        error("""
                int foo;
                const int foo(int* a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_8_0_2_6_1_1_0() {
        /* gcc reports:
test.c:4:35: warning: function return types not compatible due to 'volatile'
                 double foo(struct T b, int c);
                                   ^
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct T b, int c);
                        ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(int a) {};
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(int a) {};
                double foo(struct T b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_3_1_9_1_0_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(long a);
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(long a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(long a) {};
                struct_anonymous foo(long a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_1_6_7_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(const int b) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(long a);
                      ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(const int b) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(long a);
                struct T foo(const int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_2_2_2_3_0_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int* a) {};
                        ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(double a);
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int* a) {};
                 ^

        */
        error("""
                double foo(double a);
                double foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_2_6_4_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_0_3_1_8_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(volatile int a, int c) {};
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(volatile int a, int c) {};
                 ^

        */
        error("""
                int foo;
                long foo(volatile int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_3_9_9_0_1_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(struct_anonymous b) {};
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo;
                struct_anonymous foo(struct_anonymous b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_4_5_8_0_0_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a);
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                struct S foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_4_6_4_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_5_2_8_0_0_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 double foo(volatile int a);
                 ^
test.c:4:24: error: conflicting types for 'foo'
                 double foo(volatile int a);
                        ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct S a);
                              ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(struct S a);
                double foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_2_5_1_5_1_1_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct S a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct S a) {};
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_6_8_7_1_0_0() {
        correct("""
                volatile int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_4_6_3_8_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_7_3_7_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_7_7_2_1_1_1() {
        /* gcc reports:
test.c:2:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_3_8_5_5_1_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct S a, int c) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(volatile int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S a, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct S a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct S a, int c) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(volatile int a);
                struct S foo(struct S a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_5_8_4_9_0_1_0() {
        /* gcc reports:
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct_anonymous b) {};
                                   ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(volatile int a);
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct_anonymous b) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(volatile int a);
                struct { int a; } foo(struct_anonymous b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_9_6_7_0_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(const int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo;
                struct T foo(const int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_9_6_1_1_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct_anonymous a);
                          ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct_anonymous a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_0_5_1_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(int a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int a) {};
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_0_8_2_0_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(double a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(double a);
                              ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(int a);
                     ^

        */
        error("""
                int foo(int a);
                volatile int foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_1_7_5_0_1_0() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(struct S b);
                           ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo;
                const int foo(struct S b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_1_6_3_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int* b, int c) {};
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(long a);
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(int* b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int* b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(long a);
                struct T foo(int* b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_10_2_5_4_0_1_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } b) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } b) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(double a) {};
                      ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct { int a; } b) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                void foo(double a) {};
                struct S foo(struct { int a; } b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_3_2_3_7_0_1_1() {
        correct("""
                int* foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_3_7_9_1_0_0() {
        /* gcc reports:
test.c:6:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(struct_anonymous a, int c);
                           ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo;
                const int foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_3_2_1_0_1_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 double foo(long b);
                 ^
test.c:2:24: error: conflicting types for 'foo'
                 double foo(long b);
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int* a);
                              ^

        */
        error("""
                volatile int foo(int* a);
                double foo(long b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_4_10_8_1_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(volatile int b, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                void foo(volatile int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_3_4_6_3_0_1_1() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a);
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct { int a; } a);
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(struct { int a; } a);
                struct T foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_10_5_4_5_0_0_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct S a) {};
                                   ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct S a);
                      ^
test.c: In function 'foo':
test.c:4:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct S a) {};
                                              ^

        */
        error("""
              struct S { int x; int y; };

                void foo(struct S a);
                struct { int a; } foo(struct S a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_5_10_4_0_0_1() {
        /* gcc reports:
test.c:4:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a) {};
                                 ^
test.c:4:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } a) {};
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct S a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 void foo(struct { int a; } a) {};
                      ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a);
                void foo(struct { int a; } a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_3_6_9_1_1_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(long a, int c);
                                  ^
test.c:5:22: note: previous declaration of 'foo' was here
                 int* foo(struct T a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                int* foo(struct T a);
                struct_anonymous foo(long a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_6_2_9_1_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct_anonymous a, int c) {};
                        ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct_anonymous' but argument is of type 'int'
                 double foo(struct_anonymous a, int c) {};
                        ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(struct_anonymous a, int c) {};
                        ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo;
                double foo(struct_anonymous a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_7_7_7_0_0_1_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(const int a) {};
                           ^

        */
        error("""
                const int foo(const int a) {};
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_7_2_4_0_1_1() {
        /* gcc reports:
test.c:2:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } b);
                                   ^
test.c:2:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:24: error: conflicting types for 'foo'
                 double foo(struct { int a; } b);
                        ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(const int a) {};
                     ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: expected 'struct <anonymous>' but argument is of type 'int'
                 double foo(struct { int a; } b);
                        ^

        */
        error("""
                int foo(const int a) {};
                double foo(struct { int a; } b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_8_8_0_6_0_0_0() {
        /* gcc reports:
test.c:4:32: warning: function return types not compatible due to 'volatile'
                 int foo(struct T a);
                                ^
test.c:4:21: error: conflicting types for 'foo'
                 int foo(struct T a);
                     ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(volatile int a) {};
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(volatile int a) {};
                int foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_8_8_10_7_0_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(volatile int a) {};
                              ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo;
                      ^

        */
        error("""
                volatile int foo(volatile int a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_10_9_2_9_0_0_0() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct_anonymous a) {};
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a) {};
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_9_6_4_1_0_1() {
        /* gcc reports:
test.c:6:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a, int c);
                                     ^
test.c:6:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct { int a; } a, int c);
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } a, int c);
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(struct { int a; } a, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo;
                struct T foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_4_0_0_1_1_1() {
        /* gcc reports:
test.c:3:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } a);
                                             ^
test.c:3:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct { int a; } a);
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct { int a; } a);
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_10_9_0_1_1_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo;
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_4_0_2_1_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo;
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_7_0_3_1_1_1() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(int* b, int c) {};
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(int* b, int c) {};
                     ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(int* b, int c) {};
                 ^

        */
        error("""
                long foo(const int a);
                int foo(int* b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_10_2_0_4_0_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo(double a);
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo;
                     ^

        */
        error("""
                void foo(double a);
                int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_6_0_5_0_1_1() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S b);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct T a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:21: note: expected 'struct S' but argument is of type 'int'
                 int foo(struct S b);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct T a);
                int foo(struct S b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_9_0_6_0_0_1() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo(struct T a);
                     ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: expected 'struct T' but argument is of type 'int'
                 int foo(struct T a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo;
                int foo(struct T a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_5_0_7_1_0_1() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(const int a, int c);
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(const int a, int c);
                     ^

        */
        error("""
                long foo;
                int foo(const int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_3_0_8_1_0_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo(volatile int a, int c) {};
                     ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(int* a) {};
                           ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(volatile int a, int c) {};
                 ^

        */
        error("""
                const int foo(int* a) {};
                int foo(volatile int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_5_3_0_9_1_1_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct_anonymous b, int c) {};
                     ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(int* a) {};
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(int* a) {};
                int foo(struct_anonymous b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_7_9_1_0_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(int a) {};
                      ^
test.c:3:27: note: previous definition of 'foo' was here
                 const int foo(struct_anonymous a) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                const int foo(struct_anonymous a) {};
                long foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_2_1_1_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(long a, int c);
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo(long a, int c);
                      ^

        */
        error("""
                void foo;
                long foo(long a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_1_2_1_2_0_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(double a) {};
                      ^

        */
        error("""
                long foo(double a) {};
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_4_3_1_3_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(int* a);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                long foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_9_1_4_1_1_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 long foo(struct { int a; } b, int c);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct { int a; } b, int c);
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                long foo(struct { int a; } b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_2_2_1_5_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct S b) {};
                      ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 long foo(struct S b) {};
                      ^
test.c: In function 'foo':
test.c:4:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct S b) {};
                                 ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                long foo(struct S b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_4_4_1_6_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo(struct T a) {};
                      ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'foo':
test.c:4:33: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(struct T a) {};
                                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo;
                long foo(struct T a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_4_1_1_7_0_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo(const int a);
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                long foo(const int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_3_5_1_8_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_1_1_9_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_3_1_2_0_1_1_1() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo(int b, int c) {};
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo(long a);
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(int b, int c) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int b, int c) {};
                 ^

        */
        error("""
                int* foo(long a);
                double foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_1_2_1_0_1_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(long b);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(long a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(long a);
                double foo(long b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_9_2_2_1_1_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(double b, int c) {};
                        ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(double b, int c) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(double b, int c) {};
                 ^

        */
        error("""
                double foo;
                double foo(double b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_0_4_2_3_0_1_0() {
        /* gcc reports:
test.c:1:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } a) {};
                                ^
test.c:1:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(struct { int a; } a) {};
                     ^

        */
        error("""
                int foo(struct { int a; } a) {};
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_8_7_2_4_1_0_1() {
        /* gcc reports:
test.c:2:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a, int c) {};
                                   ^
test.c:2:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: warning: function return types not compatible due to 'volatile'
test.c:2:24: error: conflicting types for 'foo'
                 double foo(struct { int a; } a, int c) {};
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(const int a);
                              ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: expected 'struct <anonymous>' but argument is of type 'int'
                 double foo(struct { int a; } a, int c) {};
                        ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(struct { int a; } a, int c) {};
                        ^
test.c: In function 'foo':
test.c:2:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct { int a; } a, int c) {};
                                   ^

        */
        error("""
                volatile int foo(const int a);
                double foo(struct { int a; } a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_5_2_2_5_0_1_0() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct S b);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                double foo(struct S b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_5_7_2_6_0_1_1() {
        /* gcc reports:
test.c:6:24: error: conflicting types for 'foo'
                 double foo(struct T b) {};
                        ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(const int a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:24: note: expected 'struct T' but argument is of type 'int'
                 double foo(struct T b) {};
                        ^
test.c: In function 'foo':
test.c:6:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct T b) {};
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(const int a) {};
                double foo(struct T b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_8_0_2_7_1_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 double foo(const int a, int c) {};
                 ^
test.c:2:24: error: conflicting types for 'foo'
                 double foo(const int a, int c) {};
                        ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(int a);
                              ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(const int a, int c) {};
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(const int a, int c) {};
                 ^

        */
        error("""
                volatile int foo(int a);
                double foo(const int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_6_9_2_8_1_0_0() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(volatile int a, int c) {};
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(volatile int a, int c) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                double foo(volatile int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_2_1_2_9_1_1_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct_anonymous b, int c) {};
                        ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(long a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct_anonymous' but argument is of type 'int'
                 double foo(struct_anonymous b, int c) {};
                        ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(struct_anonymous b, int c) {};
                        ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(long a) {};
                double foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_6_4_3_0_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(int a) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(int a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                int* foo(int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_6_3_1_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(long b, int c);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(long b, int c);
                      ^

        */
        error("""
                double foo;
                int* foo(long b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_3_2_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(double b);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
                int foo(volatile int a);
                int* foo(double b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_4_0_3_3_0_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(int* a) {};
                      ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(int* a) {};
                 ^

        */
        error("""
                struct { int a; } foo(int a) {};
                int* foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_9_5_3_4_1_0_1() {
        /* gcc reports:
test.c:6:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a, int c);
                                 ^
test.c:6:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:22: error: conflicting types for 'foo'
                 int* foo(struct { int a; } a, int c);
                      ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct S a);
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int* foo(struct { int a; } a, int c);
                      ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:22: note: declared here
                 int* foo(struct { int a; } a, int c);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a);
                int* foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_8_7_3_5_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting type qualifiers for 'foo'
                 int* foo;
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_6_7_3_6_0_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(struct T b);
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct T foo(const int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a) {};
                int* foo(struct T b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_5_6_3_7_0_0_0() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct T a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a);
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_4_7_3_8_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(volatile int a, int c) {};
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(volatile int a, int c) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(volatile int a, int c) {};
                 ^

        */
        error("""
                struct { int a; } foo;
                int* foo(volatile int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_1_3_9_1_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo;
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                int* foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_8_2_4_0_0_0_0() {
        /* gcc reports:
test.c:2:24: warning: function return types not compatible due to 'volatile'
                 struct { int a; } foo(int a);
                        ^
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(int a);
                                   ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(double a);
                              ^

        */
        error("""
                volatile int foo(double a);
                struct { int a; } foo(int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_9_0_4_1_0_0_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_3_3_4_2_1_0_0() {
        /* gcc reports:
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double a, int c) {};
                                   ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(int* a) {};
                      ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(double a, int c) {};
                        ^

        */
        error("""
                int* foo(int* a) {};
                struct { int a; } foo(double a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_5_5_4_3_0_1_0() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct S a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct S a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_7_8_4_4_1_0_1() {
        /* gcc reports:
test.c:2:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a, int c);
                                              ^
test.c:2:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct { int a; } a, int c);
                                   ^
test.c:1:27: note: previous definition of 'foo' was here
                 const int foo(volatile int a) {};
                           ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct { int a; } foo(struct { int a; } a, int c);
                                   ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo(struct { int a; } a, int c);
                                   ^

        */
        error("""
                const int foo(volatile int a) {};
                struct { int a; } foo(struct { int a; } a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_3_2_4_5_0_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(double a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                int* foo(double a) {};
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_5_7_4_6_0_1_0() {
        /* gcc reports:
test.c:6:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(struct T b);
                                   ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo;
                struct { int a; } foo(struct T b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_4_1_4_7_1_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(const int a, int c) {};
                                   ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo(const int a, int c) {};
                                   ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(const int a, int c) {};
                        ^

        */
        error("""
                struct { int a; } foo;
                struct { int a; } foo(const int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_4_0_4_8_1_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo(int a) {};
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_2_4_9_1_0_0() {
        /* gcc reports:
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct_anonymous a, int c);
                                   ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(double a) {};
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(double a) {};
                struct { int a; } foo(struct_anonymous a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_10_1_5_0_0_1_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int b);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                struct S foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_8_3_5_1_0_1_1() {
        /* gcc reports:
test.c:4:24: warning: function return types not compatible due to 'volatile'
                 struct S foo(long b) {};
                        ^
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(long b) {};
                          ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(int* a) {};
                              ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(long b) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(int* a) {};
                struct S foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_2_4_5_2_1_0_0() {
        /* gcc reports:
test.c:3:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a) {};
                                   ^
test.c:3:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct { int a; } a) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(struct { int a; } a) {};
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_9_5_3_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting type qualifiers for 'foo'
                 struct S foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_2_5_4_1_0_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a, int c);
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } a, int c);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(double a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(double a);
                struct S foo(struct { int a; } a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_8_8_5_5_0_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct S a);
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo;
                struct S foo(struct S a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_2_3_5_6_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo;
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_6_5_7_1_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(const int a, int c) {};
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(const int a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(const int a, int c) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                void foo;
                struct S foo(const int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_10_7_5_8_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int a);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(const int a);
                      ^

        */
        error("""
              struct S { int x; int y; };

                void foo(const int a);
                struct S foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_6_5_9_0_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo;
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo;
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_9_6_0_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_2_7_6_1_1_1_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(long b, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo;
                struct T foo(long b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_10_8_6_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(volatile int a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(volatile int a) {};
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_4_6_3_0_0_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int* a) {};
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int* a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                struct T foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_0_8_6_4_1_1_0() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } b, int c) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } b, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                struct T foo(struct { int a; } b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_4_5_6_5_1_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct S b, int c) {};
                          ^
test.c:5:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct S' but argument is of type 'int'
                 struct T foo(struct S b, int c) {};
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(struct S b, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct S b, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct { int a; } foo;
                struct T foo(struct S b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_3_0_6_6_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(int a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(int a) {};
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_9_6_7_1_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_9_1_6_8_1_1_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(volatile int b, int c) {};
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(volatile int b, int c) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                struct T foo(volatile int b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_6_2_6_9_0_0_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct_anonymous a) {};
                          ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(double a) {};
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct T foo(struct_anonymous a) {};
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct_anonymous a) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(double a) {};
                struct T foo(struct_anonymous a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_4_7_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(int a) {};
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(const int a);
                                   ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int a) {};
                 ^

        */
        error("""
                struct { int a; } foo(const int a);
                const int foo(int a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_9_6_7_1_0_1_1() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(long b) {};
                           ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(struct T a);
                                  ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(long b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(struct T a);
                const int foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_6_5_7_2_1_1_0() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(double b, int c) {};
                           ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(struct S a) {};
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(double b, int c) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a) {};
                const int foo(double b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_6_7_3_1_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int* b, int c);
                           ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct T a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(struct T a);
                const int foo(int* b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_0_7_4_0_1_1() {
        /* gcc reports:
test.c:4:38: warning: anonymous struct declared inside parameter list
                 const int foo(struct { int a; } b);
                                      ^
test.c:4:38: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct { int a; } b);
                           ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(int a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct <anonymous>' but argument is of type 'int'
                 const int foo(struct { int a; } b);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int a) {};
                const int foo(struct { int a; } b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_7_7_5_0_1_0() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(struct S b);
                           ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(const int a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(const int a) {};
                const int foo(struct S b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_8_7_6_1_1_0() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(struct T b, int c);
                           ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(volatile int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo(volatile int a) {};
                const int foo(struct T b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_8_2_7_7_1_0_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(double a) {};
                              ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
                volatile int foo(double a) {};
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_2_1_7_8_0_1_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(volatile int b) {};
                           ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(volatile int b) {};
                 ^

        */
        error("""
                double foo;
                const int foo(volatile int b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_9_7_7_9_1_1_1() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(const int a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(const int a) {};
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_3_8_0_0_1_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(int b);
                              ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                volatile int foo(int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_8_8_1_1_0_0() {
        correct("""
                volatile int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_7_0_8_2_0_0_0() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(double a);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(double a);
                              ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^

        */
        error("""
                const int foo(int a);
                volatile int foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_9_8_3_0_0_0() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_7_8_4_0_0_0() {
        /* gcc reports:
test.c:4:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a) {};
                                         ^
test.c:4:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:41: warning: function return types not compatible due to 'volatile'
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct { int a; } a) {};
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(const int a);
                          ^
test.c: In function 'foo':
test.c:4:41: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct { int a; } a) {};
                                         ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(const int a);
                volatile int foo(struct { int a; } a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_5_8_5_1_1_0() {
        /* gcc reports:
test.c:6:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct S b, int c);
                              ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo;
                volatile int foo(struct S b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_4_2_8_6_1_0_1() {
        /* gcc reports:
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct T a, int c);
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct T a, int c);
                              ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(double a) {};
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct T' but argument is of type 'int'
                 volatile int foo(struct T a, int c);
                              ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(struct T a, int c);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct { int a; } foo(double a) {};
                volatile int foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_10_3_8_7_1_0_1() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(const int a, int c);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:30: note: declared here
                 volatile int foo(const int a, int c);
                              ^

        */
        error("""
                void foo;
                volatile int foo(const int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_3_5_8_8_0_0_1() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(volatile int a);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(volatile int a);
                              ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(struct S a) {};
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(struct S a) {};
                volatile int foo(volatile int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_0_1_8_9_1_1_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct_anonymous b, int c);
                              ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                volatile int foo(struct_anonymous b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_7_9_0_0_0_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a) {};
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(const int a);
                struct_anonymous foo(int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_2_0_9_1_1_0_0() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(long a, int c) {};
                                  ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(long a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(int a);
                struct_anonymous foo(long a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_4_5_9_2_1_0_0() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(double a, int c) {};
                                  ^
test.c:5:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(struct S a) {};
                                   ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(double a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct { int a; } foo(struct S a) {};
                struct_anonymous foo(double a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_0_3_9_3_0_1_0() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(int* a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(int* a);
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_7_9_4_0_1_0() {
        /* gcc reports:
test.c:6:45: warning: anonymous struct declared inside parameter list
                 struct_anonymous foo(struct { int a; } b) {};
                                             ^
test.c:6:45: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct { int a; } b) {};
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(const int a);
                          ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct { int a; } b) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(const int a);
                struct_anonymous foo(struct { int a; } b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_2_9_5_0_1_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct S b);
                                  ^
test.c:5:24: note: previous definition of 'foo' was here
                 double foo(double a) {};
                        ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct S' but argument is of type 'int'
                 struct_anonymous foo(struct S b);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                double foo(double a) {};
                struct_anonymous foo(struct S b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_2_6_9_6_0_1_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct T b) {};
                                  ^
test.c:5:24: note: previous definition of 'foo' was here
                 double foo(struct T a) {};
                        ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct T' but argument is of type 'int'
                 struct_anonymous foo(struct T b) {};
                                  ^
test.c: In function 'foo':
test.c:6:45: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct T b) {};
                                             ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                double foo(struct T a) {};
                struct_anonymous foo(struct T b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_4_9_7_0_1_0() {
        correct("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_9_9_8_0_1_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(volatile int b);
                                  ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(struct_anonymous a);
                struct_anonymous foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_7_6_9_9_0_0_1() {
        /* gcc reports:
test.c:6:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct_anonymous a);
                                  ^
test.c:5:27: note: previous definition of 'foo' was here
                 const int foo(struct T a) {};
                           ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct_anonymous foo(struct_anonymous a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                const int foo(struct T a) {};
                struct_anonymous foo(struct_anonymous a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_7_2_10_0_1_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int b, int c) {};
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(double a);
                           ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(int b, int c) {};
                      ^

        */
        error("""
                const int foo(double a);
                void foo(int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_4_0_10_1_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_4_10_2_0_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(double b) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
                void foo;
                void foo(double b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_3_9_10_3_1_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct_anonymous a);
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a);
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_7_10_4_0_0_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: conflicting types for 'foo'
                 void foo(struct { int a; } a);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo(const int a);
                     ^

        */
        error("""
                int foo(const int a);
                void foo(struct { int a; } a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_8_0_10_5_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting type qualifiers for 'foo'
                 void foo;
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^

        */
        error("""
                volatile int foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_7_10_6_1_0_0() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct T a, int c);
                      ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                void foo(struct T a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_1_10_7_1_0_0() {
        /* gcc reports:
test.c:2:22: error: conflicting type qualifiers for 'foo'
                 void foo;
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_5_4_10_8_0_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(volatile int a) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                void foo(volatile int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_1_10_9_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_7_1_0_6_0_0_1() {
        /* gcc reports:
test.c:2:21: error: conflicting type qualifiers for 'foo'
                 int foo;
                     ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_3_4_0_1_1_1_1() {
        /* gcc reports:
test.c:1:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a) {};
                                 ^
test.c:1:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(long b, int c);
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(struct { int a; } a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(long b, int c);
                     ^

        */
        error("""
                int* foo(struct { int a; } a) {};
                int foo(long b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_6_1_7_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(struct T a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(struct T a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_2_0_1_2_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^

        */
        error("""
                double foo(int a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_9_2_3_0_1_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int* b);
                        ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a);
                double foo(int* b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_7_2_2_4_1_1_1() {
        /* gcc reports:
test.c:2:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } b, int c);
                                   ^
test.c:2:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct { int a; } b, int c);
                        ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: expected 'struct <anonymous>' but argument is of type 'int'
                 double foo(struct { int a; } b, int c);
                        ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:24: note: declared here
                 double foo(struct { int a; } b, int c);
                        ^

        */
        error("""
                const int foo;
                double foo(struct { int a; } b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_3_9_3_9_0_1_1() {
        /* gcc reports:
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:3:22: note: expected 'struct_anonymous' but argument is of type 'int'
                 int* foo(struct_anonymous a) {};
                      ^
test.c: In function 'foo':
test.c:3:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(struct_anonymous a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int* foo(struct_anonymous a) {};
                int* foo(struct_anonymous b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_2_8_3_6_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo;
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(volatile int a);
                        ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo;
                      ^

        */
        error("""
                double foo(volatile int a);
                int* foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_10_6_4_2_0_0_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(double a);
                                   ^
test.c:3:22: note: previous definition of 'foo' was here
                 void foo(struct T a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(struct T a) {};
                struct { int a; } foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_1_4_7_1_1_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(const int b, int c);
                                   ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                struct { int a; } foo(const int b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_0_5_1_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(long b) {};
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(long b) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int a);
                struct S foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_2_5_3_1_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(int* b, int c);
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(int* b, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                struct S foo(int* b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_9_3_6_3_0_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int* a);
                          ^
test.c:5:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct_anonymous foo;
                struct T foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_8_5_6_2_1_0_1() {
        /* gcc reports:
test.c:6:24: warning: function return types not compatible due to 'volatile'
                 struct T foo(double a, int c);
                        ^
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(double a, int c);
                          ^
test.c:5:30: note: previous definition of 'foo' was here
                 volatile int foo(struct S a) {};
                              ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct T foo(double a, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                volatile int foo(struct S a) {};
                struct T foo(double a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_10_9_7_0_0_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(int b) {};
                           ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct_anonymous a);
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(int b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                void foo(struct_anonymous a);
                const int foo(int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_3_7_2_1_0_0() {
        /* gcc reports:
test.c:2:27: error: conflicting types for 'foo'
                 const int foo(double a, int c);
                           ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int* a);
                        ^

        */
        error("""
                double foo(int* a);
                const int foo(double a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_2_8_1_0_1_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo;
                              ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(double a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(double a);
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_8_8_1_1_1_0() {
        /* gcc reports:
test.c:4:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long b, int c);
                 ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(long b, int c);
                              ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(volatile int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(volatile int a) {};
                volatile int foo(long b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_1_1_9_9_0_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct_anonymous b) {};
                                  ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(long a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct_anonymous foo(struct_anonymous b) {};
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct_anonymous b) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(long a);
                struct_anonymous foo(struct_anonymous b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_0_6_9_3_1_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo(int* b, int c) {};
                                  ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo(int* b, int c) {};
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int* b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo;
                struct_anonymous foo(int* b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_5_1_10_8_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(volatile int a);
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(long a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(long a) {};
                void foo(volatile int a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_8_9_10_1_1_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct_anonymous a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                volatile int foo(struct_anonymous a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_5_9_0_5_0_0_0() {
        /* gcc reports:
test.c:6:21: error: conflicting types for 'foo'
                 int foo(struct S a);
                     ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct S foo(struct_anonymous a);
                int foo(struct S a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_0_9_0_0_0_1_1() {
        correct("""
                int foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_3_4_1_5_1_0_1() {
        /* gcc reports:
test.c:3:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } a);
                                 ^
test.c:3:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct S a, int c);
                      ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct { int a; } a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct S' but argument is of type 'int'
                 long foo(struct S a, int c);
                      ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 long foo(struct S a, int c);
                      ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(struct { int a; } a);
                long foo(struct S a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_0_1_0_0_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(int a);
                           ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 long foo;
                      ^

        */
        error("""
                const int foo(int a);
                long foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_3_2_7_1_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_2_2_2_0_1_0() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(double b);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                double foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_7_3_7_1_0_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(const int a, int c);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(const int a);
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 int* foo(const int a, int c);
                      ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(const int a);
                int* foo(const int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_0_6_3_1_0_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(long b);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int* foo(long b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_2_4_1_1_0_0() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(long a, int c) {};
                                   ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'foo':
test.c:2:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(long a, int c) {};
                        ^

        */
        error("""
                void foo;
                struct { int a; } foo(long a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_7_4_5_0_1_0() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct S b) {};
                                   ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(const int a) {};
                     ^
test.c: In function 'foo':
test.c:4:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct S b) {};
                                              ^

        */
        error("""
              struct S { int x; int y; };

                int foo(const int a) {};
                struct { int a; } foo(struct S b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_5_7_5_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(double a);
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(const int a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(const int a);
                struct S foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_9_5_5_5_1_1_1() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(struct S b, int c) {};
                          ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct S a) {};
                                  ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: expected 'struct S' but argument is of type 'int'
                 struct S foo(struct S b, int c) {};
                          ^
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(struct S b, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct S b, int c) {};
                                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a) {};
                struct S foo(struct S b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_7_3_6_3_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(int* a);
                           ^

        */
        error("""
              struct T { int x; int y; int z; };

                const int foo(int* a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_8_8_6_4_1_1_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } b, int c) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(struct { int a; } b, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(struct { int a; } b, int c) {};
                                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo;
                struct T foo(struct { int a; } b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_8_2_7_5_0_0_1() {
        /* gcc reports:
test.c:4:38: warning: function return types not compatible due to 'volatile'
                 const int foo(struct S a) {};
                                      ^
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct S a) {};
                           ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo(double a);
                              ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct S' but argument is of type 'int'
                 const int foo(struct S a) {};
                           ^
test.c: In function 'foo':
test.c:4:38: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct S a) {};
                                      ^

        */
        error("""
              struct S { int x; int y; };

                volatile int foo(double a);
                const int foo(struct S a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_3_5_7_9_0_1_1() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous b);
                           ^
test.c:5:22: note: previous declaration of 'foo' was here
                 int* foo(struct S a);
                      ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:27: note: expected 'struct_anonymous' but argument is of type 'int'
                 const int foo(struct_anonymous b);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int* foo(struct S a);
                const int foo(struct_anonymous b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_4_2_8_9_1_0_1() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct_anonymous a, int c) {};
                              ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct_anonymous' but argument is of type 'int'
                 volatile int foo(struct_anonymous a, int c) {};
                              ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(struct_anonymous a, int c) {};
                              ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous a, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo;
                volatile int foo(struct_anonymous a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_3_2_8_6_1_1_1() {
        /* gcc reports:
test.c:4:41: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct T b, int c) {};
                                         ^
test.c:4:30: error: conflicting types for 'foo'
                 volatile int foo(struct T b, int c) {};
                              ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(double a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: expected 'struct T' but argument is of type 'int'
                 volatile int foo(struct T b, int c) {};
                              ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:30: note: declared here
                 volatile int foo(struct T b, int c) {};
                              ^
test.c: In function 'foo':
test.c:4:41: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct T b, int c) {};
                                         ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(double a) {};
                volatile int foo(struct T b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_2_2_9_7_0_0_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(const int a);
                                  ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(double a);
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(double a);
                struct_anonymous foo(const int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_6_2_9_6_0_1_0() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(double a) {};
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(double a) {};
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_7_10_2_0_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(double a);
                      ^
test.c:1:21: note: previous definition of 'foo' was here
                 int foo(const int a) {};
                     ^

        */
        error("""
                int foo(const int a) {};
                void foo(double a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_10_5_1_1_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct S b, int c);
                      ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              struct S { int x; int y; };

                int foo(volatile int a);
                void foo(struct S b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_1_2_0_1_0_1_0() {
        /* gcc reports:
test.c:2:21: error: 'foo' redeclared as different kind of symbol
                 int foo(long b) {};
                     ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int foo(long b) {};
                 ^

        */
        error("""
                long foo;
                int foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_9_0_1_1_0_1() {
        /* gcc reports:
test.c:4:21: error: conflicting types for 'foo'
                 int foo(long a, int c);
                     ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct_anonymous a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:21: note: declared here
                 int foo(long a, int c);
                     ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                double foo(struct_anonymous a) {};
                int foo(long a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_5_6_1_1_0_1_0() {
        /* gcc reports:
test.c:6:22: error: conflicting types for 'foo'
                 long foo(long b) {};
                      ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct S foo(struct T a) {};
                          ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(long b) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo(struct T a) {};
                long foo(long b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_3_1_1_3_0_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 long foo(int* b) {};
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 int* foo(long a) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 long foo(int* b) {};
                 ^

        */
        error("""
                int* foo(long a) {};
                long foo(int* b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_6_8_2_3_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(int* a) {};
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(volatile int a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(int* a) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a);
                double foo(int* a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_3_5_2_4_1_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo;
                        ^
test.c:3:22: note: previous declaration of 'foo' was here
                 int* foo(struct S a);
                      ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo;
                        ^

        */
        error("""
              struct S { int x; int y; };

                int* foo(struct S a);
                double foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_6_1_3_7_1_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 int* foo(const int a, int c) {};
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(long a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(const int a, int c) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(long a);
                int* foo(const int a, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_3_0_3_0_1_0_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(int a, int c) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 int* foo(int a, int c) {};
                      ^
test.c: In function 'foo':
test.c:2:17: warning: control reaches end of non-void function [-Wreturn-type]
                 int* foo(int a, int c) {};
                 ^

        */
        error("""
                int* foo;
                int* foo(int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_6_5_4_5_1_1_0() {
        /* gcc reports:
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct S b, int c);
                                   ^
test.c:5:26: note: previous definition of 'foo' was here
                 struct T foo(struct S a) {};
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(struct S a) {};
                struct { int a; } foo(struct S b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_4_3_4_9_1_0_1() {
        /* gcc reports:
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo(struct_anonymous a, int c);
                                   ^
test.c:3:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct { int a; } foo(struct_anonymous a, int c);
                                   ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo(struct_anonymous a, int c);
                                   ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo;
                struct { int a; } foo(struct_anonymous a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_5_4_5_3_0_1_0() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a) {};
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int* b) {};
                          ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(struct { int a; } a) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int* b) {};
                        ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a) {};
                struct S foo(int* b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_0_5_8_1_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(volatile int b, int c);
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(volatile int b, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                double foo(int a);
                struct S foo(volatile int b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_1_1_6_1_1_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(long a);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                long foo(long a);
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_3_6_0_0_0_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int a);
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct S foo;
                struct T foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_6_0_7_2_0_1_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(double b) {};
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(double b) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(int a);
                const int foo(double b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_9_1_7_9_0_0_1() {
        /* gcc reports:
test.c:4:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_9_5_8_1_0_0_0() {
        /* gcc reports:
test.c:6:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(long a) {};
                 ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(long a) {};
                              ^
test.c:5:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct S a) {};
                                  ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(long a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                struct_anonymous foo(struct S a) {};
                volatile int foo(long a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_9_5_8_7_0_1_1() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(const int b);
                              ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                volatile int foo(const int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_0_9_0_0_1_0() {
        correct("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                struct_anonymous foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_0_9_9_9_1_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct_anonymous a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(struct_anonymous a) {};
                struct_anonymous foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_0_1_10_3_1_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo;
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                void foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_6_6_10_3_1_0_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo(int* a, int c);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo(int* a, int c);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                void foo(int* a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_4_2_9_0_0_0_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(int a) {};
                                  ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(double a) {};
                                   ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(int a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(double a) {};
                struct_anonymous foo(int a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_1_1_2_0_1_0_0() {
        /* gcc reports:
test.c:2:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_9_8_7_1_0_0_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(long a);
                           ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(volatile int a) {};
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(volatile int a) {};
                const int foo(long a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_8_4_6_1_1_0_1() {
        /* gcc reports:
test.c:3:41: warning: anonymous struct declared inside parameter list
                 volatile int foo(struct { int a; } a) {};
                                         ^
test.c:3:41: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:24: warning: function return types not compatible due to 'volatile'
                 struct T foo(long a, int c) {};
                        ^
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(long a, int c) {};
                          ^
test.c:3:30: note: previous definition of 'foo' was here
                 volatile int foo(struct { int a; } a) {};
                              ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(long a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(long a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo(struct { int a; } a) {};
                struct T foo(long a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_2_5_7_1_2_0_0_0() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(const int a) {};
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(const int a) {};
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_1_1_8_2_1_0_0() {
        /* gcc reports:
test.c:2:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(double a, int c);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                volatile int foo(double a, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_6_4_4_3_0_0_0() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct T foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(struct { int a; } a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(struct { int a; } a);
                struct { int a; } foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_5_4_5_3_1_0_1() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a) {};
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(int* a, int c);
                          ^
test.c:3:26: note: previous definition of 'foo' was here
                 struct S foo(struct { int a; } a) {};
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(int* a, int c);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a) {};
                struct S foo(int* a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_7_4_8_4_0_0_0() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_1_5_5_4_1_0_1() {
        /* gcc reports:
test.c:4:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a, int c) {};
                                     ^
test.c:4:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(struct { int a; } a, int c) {};
                          ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct S a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct S foo(struct { int a; } a, int c) {};
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct S foo(struct { int a; } a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:37: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct { int a; } a, int c) {};
                                     ^

        */
        error("""
              struct S { int x; int y; };

                long foo(struct S a) {};
                struct S foo(struct { int a; } a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_1_5_7_5_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct S a) {};
                           ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo(struct S a);
                      ^
test.c: In function 'foo':
test.c:4:38: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct S a) {};
                                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo(struct S a);
                const int foo(struct S a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_0_1_6_5_1_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(struct S b, int c);
                          ^
test.c:5:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                int foo(long a) {};
                struct T foo(struct S b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_2_4_1_6_0_1_1() {
        /* gcc reports:
test.c:3:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } a) {};
                                   ^
test.c:3:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct T b);
                      ^
test.c:3:24: note: previous definition of 'foo' was here
                 double foo(struct { int a; } a) {};
                        ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: expected 'struct T' but argument is of type 'int'
                 long foo(struct T b);
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(struct { int a; } a) {};
                long foo(struct T b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_9_2_7_6_1_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_6_9_7_7_0_1_0() {
        /* gcc reports:
test.c:6:27: error: conflicting types for 'foo'
                 const int foo(const int b);
                           ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct_anonymous a);
                const int foo(const int b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_4_5_7_1_1_1() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(const int b, int c) {};
                          ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'main':
test.c:7:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:26: note: declared here
                 struct S foo(const int b, int c) {};
                          ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(const int b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo;
                struct S foo(const int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_6_8_1_8_0_1_1() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(volatile int b);
                      ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo(volatile int a);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo(volatile int a);
                long foo(volatile int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_7_2_10_8_1_0_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(volatile int a, int c) {};
                      ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo(double a);
                           ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(volatile int a, int c) {};
                      ^

        */
        error("""
                const int foo(double a);
                void foo(volatile int a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_9_3_10_9_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 void foo(struct_anonymous a);
                      ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int* a);
                void foo(struct_anonymous a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_1_1_9_9_9_1_1_1() {
        /* gcc reports:
test.c:4:34: error: conflicting types for 'foo'
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct_anonymous a) {};
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: expected 'struct_anonymous' but argument is of type 'int'
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo(struct_anonymous b, int c) {};
                                  ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 struct_anonymous foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                long foo(struct_anonymous a) {};
                struct_anonymous foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_7_7_2_0_0_0_1() {
        /* gcc reports:
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(int a);
                        ^
test.c:1:27: note: previous declaration of 'foo' was here
                 const int foo;
                           ^

        */
        error("""
                const int foo;
                double foo(int a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_1_7_8_0_0_1_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(int b);
                 ^
test.c:2:30: error: conflicting types for 'foo'
                 volatile int foo(int b);
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo(const int a);
                      ^

        */
        error("""
                long foo(const int a);
                volatile int foo(int b);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_4_6_5_1_0_0_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(long a) {};
                          ^
test.c:5:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct T a);
                                   ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(long a) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct { int a; } foo(struct T a);
                struct S foo(long a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_2_8_3_1_0_1_0() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(long b);
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(volatile int a);
                        ^

        */
        error("""
                double foo(volatile int a);
                int* foo(long b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_5_6_2_0_0_0() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(double a);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                struct T foo(double a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_5_4_5_2_1_1_0() {
        /* gcc reports:
test.c:3:37: warning: anonymous struct declared inside parameter list
                 struct S foo(struct { int a; } a);
                                     ^
test.c:3:37: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo;
                          ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo(struct { int a; } a);
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo(struct { int a; } a);
                struct S foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_0_1_6_3_1_0_1() {
        /* gcc reports:
test.c:4:26: error: 'foo' redeclared as different kind of symbol
                 struct T foo(int* a, int c) {};
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(int* a, int c) {};
                          ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(int* a, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo;
                struct T foo(int* a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_2_5_0_3_0_1_0() {
        /* gcc reports:
test.c:2:21: error: conflicting types for 'foo'
                 int foo;
                     ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
                double foo;
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_4_1_4_4_1_0_1() {
        /* gcc reports:
test.c:2:46: warning: anonymous struct declared inside parameter list
                 struct { int a; } foo(struct { int a; } a, int c) {};
                                              ^
test.c:2:46: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct { int a; } a, int c) {};
                                   ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(long a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: expected 'struct <anonymous>' but argument is of type 'int'
                 struct { int a; } foo(struct { int a; } a, int c) {};
                                   ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo(struct { int a; } a, int c) {};
                                   ^
test.c: In function 'foo':
test.c:2:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct { int a; } a, int c) {};
                                              ^

        */
        error("""
                struct { int a; } foo(long a);
                struct { int a; } foo(struct { int a; } a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_10_1_0_4_1_1_1() {
        /* gcc reports:
test.c:2:32: warning: anonymous struct declared inside parameter list
                 int foo(struct { int a; } b, int c);
                                ^
test.c:2:32: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:21: error: conflicting types for 'foo'
                 int foo(struct { int a; } b, int c);
                     ^
test.c:1:22: note: previous definition of 'foo' was here
                 void foo(long a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: expected 'struct <anonymous>' but argument is of type 'int'
                 int foo(struct { int a; } b, int c);
                     ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:21: note: declared here
                 int foo(struct { int a; } b, int c);
                     ^

        */
        error("""
                void foo(long a) {};
                int foo(struct { int a; } b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_0_5_7_5_0_0_0() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct S a) {};
                           ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(struct S a) {};
                     ^
test.c: In function 'foo':
test.c:4:38: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct S a) {};
                                      ^

        */
        error("""
              struct S { int x; int y; };

                int foo(struct S a) {};
                const int foo(struct S a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_1_8_8_5_0_1_1() {
        /* gcc reports:
test.c:2:30: error: conflicting type qualifiers for 'foo'
                 volatile int foo;
                              ^
test.c:1:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
                long foo;
                volatile int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_8_4_6_1_0_1() {
        /* gcc reports:
test.c:2:35: error: 'foo' redeclared as different kind of symbol
                 struct { int a; } foo;
                                   ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(volatile int a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:35: note: declared here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo(volatile int a);
                struct { int a; } foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_1_8_0_2_6_0_1_0() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct T b) {};
                        ^
test.c:3:30: note: previous declaration of 'foo' was here
                 volatile int foo;
                              ^
test.c: In function 'foo':
test.c:4:35: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(struct T b) {};
                                   ^

        */
        error("""
              struct T { int x; int y; int z; };

                volatile int foo;
                double foo(struct T b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_1_0_1_7_1_0_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(int a) {};
                      ^

        */
        error("""
                long foo(int a) {};
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_0_6_7_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(const int b) {};
                          ^
test.c:3:24: note: previous declaration of 'foo' was here
                 double foo(int a);
                        ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct T foo(const int b) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                double foo(int a);
                struct T foo(const int b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_5_1_2_8_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo;
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                double foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_10_6_4_8_1_1_1() {
        /* gcc reports:
test.c:4:35: error: conflicting types for 'foo'
                 struct { int a; } foo(volatile int b, int c) {};
                                   ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(struct T a);
                      ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:35: note: declared here
                 struct { int a; } foo(volatile int b, int c) {};
                                   ^
test.c: In function 'foo':
test.c:4:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(volatile int b, int c) {};
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(struct T a);
                struct { int a; } foo(volatile int b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_4_6_8_9_0_0_0() {
        /* gcc reports:
test.c:6:17: warning: function return types not compatible due to 'volatile'
                 volatile int foo(struct_anonymous a) {};
                 ^
test.c:6:30: error: conflicting types for 'foo'
                 volatile int foo(struct_anonymous a) {};
                              ^
test.c:5:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(struct T a);
                                   ^
test.c: In function 'foo':
test.c:6:17: warning: control reaches end of non-void function [-Wreturn-type]
                 volatile int foo(struct_anonymous a) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct { int a; } foo(struct T a);
                volatile int foo(struct_anonymous a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_0_8_7_9_1_1_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous b, int c) {};
                           ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct_anonymous' but argument is of type 'int'
                 const int foo(struct_anonymous b, int c) {};
                           ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: declared here
                 const int foo(struct_anonymous b, int c) {};
                           ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(struct_anonymous b, int c) {};
                 ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(volatile int a);
                const int foo(struct_anonymous b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_4_0_7_0_0_0_0() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(int a);
                                   ^

        */
        error("""
                struct { int a; } foo(int a);
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_2_10_4_6_0_0_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_0_7_3_1_1_1_0() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 int* foo(long b, int c);
                      ^
test.c:1:21: note: previous declaration of 'foo' was here
                 int foo;
                     ^

        */
        error("""
                int foo;
                int* foo(long b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_6_9_7_1_0_1_1() {
        /* gcc reports:
test.c:4:27: error: 'foo' redeclared as different kind of symbol
                 const int foo(long b) {};
                           ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct T foo;
                          ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 const int foo(long b) {};
                 ^

        */
        error("""
              struct T { int x; int y; int z; };

                struct T foo;
                const int foo(long b) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_7_7_5_2_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct S foo(double b);
                          ^
test.c:3:27: note: previous declaration of 'foo' was here
                 const int foo(const int a);
                           ^

        */
        error("""
              struct S { int x; int y; };

                const int foo(const int a);
                struct S foo(double b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_2_3_10_2_1_1_1() {
        /* gcc reports:
test.c:2:22: error: conflicting types for 'foo'
                 void foo(double b, int c) {};
                      ^
test.c:1:24: note: previous declaration of 'foo' was here
                 double foo(int* a);
                        ^
test.c: In function 'main':
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(double b, int c) {};
                      ^

        */
        error("""
                double foo(int* a);
                void foo(double b, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_1_0_9_5_3_1_1_0() {
        /* gcc reports:
test.c:6:26: error: conflicting types for 'foo'
                 struct S foo(int* b, int c) {};
                          ^
test.c:5:21: note: previous declaration of 'foo' was here
                 int foo(struct_anonymous a);
                     ^
test.c: In function 'foo':
test.c:6:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(int* b, int c) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                int foo(struct_anonymous a);
                struct S foo(int* b, int c) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_0_1_9_3_1_1_1() {
        /* gcc reports:
test.c:4:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:3:21: note: previous definition of 'foo' was here
                 int foo(long a) {};
                     ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                int foo(long a) {};
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_8_2_3_4_1_1_0() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 int* foo(struct { int a; } b, int c);
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:33: warning: function return types not compatible due to 'volatile'
test.c:2:22: error: conflicting types for 'foo'
                 int* foo(struct { int a; } b, int c);
                      ^
test.c:1:30: note: previous declaration of 'foo' was here
                 volatile int foo(double a);
                              ^

        */
        error("""
                volatile int foo(double a);
                int* foo(struct { int a; } b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_1_10_0_10_4_1_0_1() {
        /* gcc reports:
test.c:2:33: warning: anonymous struct declared inside parameter list
                 void foo(struct { int a; } a, int c) {};
                                 ^
test.c:2:33: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo(struct { int a; } a, int c) {};
                      ^
test.c:1:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^
test.c: In function 'main':
test.c:3:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: expected 'struct <anonymous>' but argument is of type 'int'
                 void foo(struct { int a; } a, int c) {};
                      ^
test.c:3:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo(struct { int a; } a, int c) {};
                      ^

        */
        error("""
                void foo;
                void foo(struct { int a; } a, int c) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_3_2_7_5_0_1_0() {
        /* gcc reports:
test.c:2:27: error: conflicting type qualifiers for 'foo'
                 const int foo;
                           ^
test.c:1:22: note: previous declaration of 'foo' was here
                 int* foo;
                      ^

        */
        error("""
                int* foo;
                const int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_1_6_0_4_5_0_0_1() {
        /* gcc reports:
test.c:6:35: error: conflicting types for 'foo'
                 struct { int a; } foo(struct S a) {};
                                   ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(int a);
                          ^
test.c: In function 'main':
test.c:7:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:6:35: note: expected 'struct S' but argument is of type 'int'
                 struct { int a; } foo(struct S a) {};
                                   ^
test.c: In function 'foo':
test.c:6:46: warning: control reaches end of non-void function [-Wreturn-type]
                 struct { int a; } foo(struct S a) {};
                                              ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                struct T foo(int a);
                struct { int a; } foo(struct S a) {};
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_0_3_2_1_6_0_0_0() {
        /* gcc reports:
test.c:4:22: error: conflicting types for 'foo'
                 long foo(struct T a);
                      ^
test.c:3:22: note: previous definition of 'foo' was here
                 int* foo(double a) {};
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                int* foo(double a) {};
                long foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_2_6_6_1_0_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(struct T a, int c);
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(double a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: expected 'struct T' but argument is of type 'int'
                 struct T foo(struct T a, int c);
                          ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:26: note: declared here
                 struct T foo(struct T a, int c);
                          ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(double a);
                struct T foo(struct T a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_9_3_0_7_1_1_0() {
        /* gcc reports:
test.c:4:21: error: 'foo' redeclared as different kind of symbol
                 int foo;
                     ^
test.c:3:34: note: previous declaration of 'foo' was here
                 struct_anonymous foo(int* a);
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(int* a);
                int foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf2_0_5_4_2_7_1_0_1() {
        /* gcc reports:
test.c:4:24: error: 'foo' redeclared as different kind of symbol
                 double foo(const int a, int c);
                        ^
test.c:3:26: note: previous declaration of 'foo' was here
                 struct S foo;
                          ^
test.c: In function 'main':
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(const int a, int c);
                        ^

        */
        error("""
              struct S { int x; int y; };

                struct S foo;
                double foo(const int a, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_2_10_1_6_8_0_1_0() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo;
                          ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo;
                      ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo;
                struct T foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_10_5_9_8_0_1_1() {
        /* gcc reports:
test.c:6:34: error: 'foo' redeclared as different kind of symbol
                 struct_anonymous foo;
                                  ^
test.c:5:22: note: previous declaration of 'foo' was here
                 void foo(struct S a);
                      ^
test.c: In function 'main':
test.c:7:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:6:34: note: declared here
                 struct_anonymous foo;
                                  ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct S { int x; int y; };

                void foo(struct S a);
                struct_anonymous foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_7_6_5_9_0_1_0() {
        /* gcc reports:
test.c:8:26: error: conflicting types for 'foo'
                 struct S foo(struct_anonymous b) {};
                          ^
test.c:7:27: note: previous definition of 'foo' was here
                 const int foo(struct T a) {};
                           ^
test.c: In function 'foo':
test.c:8:24: warning: control reaches end of non-void function [-Wreturn-type]
                 struct S foo(struct_anonymous b) {};
                        ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                const int foo(struct T a) {};
                struct S foo(struct_anonymous b) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_2_4_1_10_9_1_1_1() {
        /* gcc reports:
test.c:2:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo(long a);
                                   ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:22: note: declared here
                 void foo;
                      ^

        */
        error("""
                struct { int a; } foo(long a);
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_2_5_5_6_0_0_0() {
        /* gcc reports:
test.c:6:26: error: 'foo' redeclared as different kind of symbol
                 struct S foo(struct T a);
                          ^
test.c:5:24: note: previous declaration of 'foo' was here
                 double foo;
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                double foo;
                struct S foo(struct T a);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_9_9_10_5_0_1_1() {
        /* gcc reports:
test.c:4:22: error: 'foo' redeclared as different kind of symbol
                 void foo;
                      ^
test.c:3:34: note: previous definition of 'foo' was here
                 struct_anonymous foo(struct_anonymous a) {};
                                  ^
test.c: In function 'main':
test.c:5:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:4:22: note: declared here
                 void foo;
                      ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct_anonymous foo(struct_anonymous a) {};
                void foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_2_6_9_1_3_1_0_0() {
        /* gcc reports:
test.c:6:22: error: 'foo' redeclared as different kind of symbol
                 long foo;
                      ^
test.c:5:26: note: previous declaration of 'foo' was here
                 struct T foo(struct_anonymous a);
                          ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

              struct T { int x; int y; int z; };

                struct T foo(struct_anonymous a);
                long foo;
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_10_8_2_6_1_1_1() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(struct T b, int c);
                        ^
test.c:3:22: note: previous declaration of 'foo' was here
                 void foo(volatile int a);
                      ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: expected 'struct T' but argument is of type 'int'
                 double foo(struct T b, int c);
                        ^
test.c:5:29: error: too few arguments to function 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:24: note: declared here
                 double foo(struct T b, int c);
                        ^

        */
        error("""
              struct T { int x; int y; int z; };

                void foo(volatile int a);
                double foo(struct T b, int c);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_1_3_8_5_0_1_0() {
        /* gcc reports:
test.c:4:30: error: 'foo' redeclared as different kind of symbol
                 volatile int foo(struct S b);
                              ^
test.c:3:22: note: previous declaration of 'foo' was here
                 long foo;
                      ^

        */
        error("""
              struct S { int x; int y; };

                long foo;
                volatile int foo(struct S b);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_8_3_10_3_0_0_1() {
        /* gcc reports:
test.c:2:17: warning: function return types not compatible due to 'volatile'
                 void foo(int* a);
                 ^
test.c:2:22: error: conflicting types for 'foo'
                 void foo(int* a);
                      ^
test.c:1:30: note: previous definition of 'foo' was here
                 volatile int foo(int* a) {};
                              ^

        */
        error("""
                volatile int foo(int* a) {};
                void foo(int* a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf2_0_4_4_2_4_1_1_0() {
        /* gcc reports:
test.c:2:35: warning: anonymous struct declared inside parameter list
                 double foo(struct { int a; } b, int c);
                                   ^
test.c:2:35: warning: its scope is only this definition or declaration, which is probably not what you want
test.c:2:24: error: 'foo' redeclared as different kind of symbol
                 double foo(struct { int a; } b, int c);
                        ^
test.c:1:35: note: previous declaration of 'foo' was here
                 struct { int a; } foo;
                                   ^

        */
        error("""
                struct { int a; } foo;
                double foo(struct { int a; } b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_2_1_1_7_7_1_0_1() {
        /* gcc reports:
test.c:2:27: error: 'foo' redeclared as different kind of symbol
                 const int foo;
                           ^
test.c:1:22: note: previous definition of 'foo' was here
                 long foo(long a) {};
                      ^
test.c: In function 'main':
test.c:3:29: error: called object 'foo' is not a function or function pointer
                 int main() {foo(0); return 0; }
                             ^
test.c:2:27: note: declared here
                 const int foo;
                           ^

        */
        error("""
                long foo(long a) {};
                const int foo;
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf1_1_1_5_2_2_0_0_0() {
        /* gcc reports:
test.c:4:24: error: conflicting types for 'foo'
                 double foo(double a) {};
                        ^
test.c:3:22: note: previous definition of 'foo' was here
                 long foo(struct S a) {};
                      ^
test.c: In function 'foo':
test.c:4:17: warning: control reaches end of non-void function [-Wreturn-type]
                 double foo(double a) {};
                 ^

        */
        error("""
              struct S { int x; int y; };

                long foo(struct S a) {};
                double foo(double a) {};
                int main() { return 0; }
                """)
   }


   @Test def test_conf1_0_4_0_7_9_0_0_1() {
        /* gcc reports:
test.c:4:27: error: conflicting types for 'foo'
                 const int foo(struct_anonymous a);
                           ^
test.c:3:35: note: previous definition of 'foo' was here
                 struct { int a; } foo(int a) {};
                                   ^
test.c: In function 'main':
test.c:5:29: error: incompatible type for argument 1 of 'foo'
                 int main() {foo(0); return 0; }
                             ^
test.c:4:27: note: expected 'struct_anonymous' but argument is of type 'int'
                 const int foo(struct_anonymous a);
                           ^

        */
        error("""
              typedef struct { int x; } struct_anonymous;

                struct { int a; } foo(int a) {};
                const int foo(struct_anonymous a);
                int main() {foo(0); return 0; }
                """)
   }


   @Test def test_conf0_0_8_5_6_1_1_1_0() {
        /* gcc reports:
test.c:6:24: warning: function return types not compatible due to 'volatile'
                 struct T foo(long b, int c);
                        ^
test.c:6:26: error: conflicting types for 'foo'
                 struct T foo(long b, int c);
                          ^
test.c:5:30: note: previous declaration of 'foo' was here
                 volatile int foo(struct S a);
                              ^

        */
        error("""
              struct T { int x; int y; int z; };

              struct S { int x; int y; };

                volatile int foo(struct S a);
                struct T foo(long b, int c);
                int main() { return 0; }
                """)
   }


   @Test def test_conf0_0_0_8_6_3_0_1_1() {
        /* gcc reports:
test.c:4:26: error: conflicting types for 'foo'
                 struct T foo(int* b);
                          ^
test.c:3:21: note: previous declaration of 'foo' was here
                 int foo(volatile int a);
                     ^

        */
        error("""
              struct T { int x; int y; int z; };

                int foo(volatile int a);
                struct T foo(int* b);
                int main() {foo(0); return 0; }
                """)
   }




}